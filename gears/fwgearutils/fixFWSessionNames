#!/usr/bin/env python3

import sys
import re
import os
import flywheel
import json
import argparse
import fwgearutils
import datetime
import csv

'''
Input format
[mv ]SessionID Timestamp SubjectLabel SessionLabel => NewSessionLabel [NewSubjectLabel]

'''
OldSubjectLabelIndex = 3
OldSessionLabelIndex = 4
ImplyIndex = 5
NewSessionLabelIndex = ImplyIndex + 1
NewSubectLabelIndex = ImplyIndex + 2

def renameContainer(CmdName, args, ContainerId, NewLabel):
    try:
        container = fw.get(ContainerId)
        if (args.verbose or args.noop):
            print("%s : Got Container '%s'" % (CmdName, ContainerId), file=sys.stderr)

    except (flywheel.rest.ApiException) as e:
        return(None, "%s : Cannot find container by '%s' : %s" % (CmdName, ContainerId, e.reason))

    OldLabel = container.label
    MvString = "mv %s(%s) => %s" % (OldLabel, ContainerId, NewLabel)

    if (OldLabel == NewLabel):
        return(container, "%s : OldLabel '%s' == NewLabel '%s'. Skipping" % (CmdName, OldLabel, NewLabel))
    
    if (args.noop or args.verbose):
        print("%s : %s" % (CmdName, MvString))

    try:
        if (args.noop or args.verbose):
            print("%s : Adding note '%s'" % (CmdName, MvString), file=sys.stderr)
        if (not args.noop):
            container.add_note(MvString)

    except (flywheel.rest.ApiException) as e:
        return(None, "%s : Cannot add note '%s' to container '%s' : %s" % (CmdName, MvString, ContainerId, e.reason))
            
    try:
        if (args.noop or args.verbose):
            print("%s : Changing container label from '%s' to '%s'" % (CmdName, OldLabel, NewLabel), file=sys.stderr)
        if (not args.noop):
            container.update(label=NewLabel)

        return(container, None)

    except (flywheel.rest.ApiException) as e:
        return(None, "%s : Cannot update container '%s' with new label '%s'. '%s'" % (CmdName, ContainerId, NewLabel, e.reason))


if __name__ == '__main__':

    import argparse

    CmdName = os.path.basename(sys.argv[0])

    ap = argparse.ArgumentParser()
    ap.add_argument('-k', '--apikey', type=str, default=None, dest="apikey", help='apikey')
    ap.add_argument('-n', '--noop', action='store_true', help='show what the program would do, but do not do it')
    ap.add_argument('-v', '--verbose', action='store_true', help='show what the program is doing')
    ap.add_argument('project', nargs=1, type=str, default=None, help='group/project|ProjectID')
    ap.add_argument('renamefile', nargs='*', type=str, default=None, help='rename file : format of [mv ] SessionID TimeStamp SubjectLabel SessionLabel => NewSessionLabel[ NewSubjectLabel]')

    args = ap.parse_args()

    fw = fwgearutils.getFW(args)
    '''
    ApiKey = fwgearutils.getApiKey(args)

    try:
        fw = flywheel.Client()
    except (OSError, Exception) as e:
        try:
            fw = flywheel.Client(ApiKey,root=True)
        
        except (OSError, Exception) as e2:
            print("e2",e2, file=sys.stderr)
            print("e",e, file=sys.stderr)
            sys.exit(1)
    '''
    if (args.project):
       try:
           container = fw.get(args.project[0])
           if ('gear_info' in container.keys()):
               ProjectID = container.parents.project
               project = fw.get(ProjectID)
           if (args.verbose or args.noop):
               print("%s : Got project '%s' via project ID '%s'" % (CmdName, project.label, args.project[0]), file=sys.stderr)

       except flywheel.rest.ApiException as e:
          try:
             project = fw.lookup(args.project[0])
             if (args.verbose or args.noop):
                 print("%s : Got project '%s' via project path '%s'" % (CmdName, project.label, args.project[0]), file=sys.stderr)

          except flywheel.rest.ApiException as e:
             print("%s : Cannot find project by '%s' : %s" % (CmdName, args.project[0], e.reason), file=sys.stderr)
             sys.exit(e.status)

    else:
       sys.exit(0)

    with open(args.renamefile[0], 'r') if len(args.renamefile) > 0 else sys.stdin as csvfile:
       csvreader = csv.reader(csvfile, delimiter=' ') 
       for LineList in csvreader:
            if (LineList[0] == 'mv'):
               LineList.pop(0)

            SessionID = LineList[0]

            if (LineList[ImplyIndex] == '=>'):
                NewSessionLabel = LineList[ImplyIndex+1]
            else:
                print("%s : bad rename line '%s' : Skipping" % (CmdName, ' '.join(LineList)), file=sys.stderr)
                continue

            (session, emesg) = renameContainer(CmdName, args, SessionID, NewSessionLabel)
            if (emesg):
                print(emesg, file=sys.stderr)

            if ((len(LineList) - ImplyIndex) > 1):
                OldSubjectLabel = LineList[OldSubjectLabelIndex]
                NewSubjectLabel = LineList[ImplyIndex+2]
                SubjectID = session.subject._id

                if (OldSubjectLabel == NewSubjectLabel):
                    print(container, "%s : OldSubjectLabel '%s' == NewSubjectLabel '%s'. Skipping" % (CmdName, OldSubjectLabel, NewSubjectLabel))
                else:
                    (subject, emesg) = renameContainer(CmdName, args, SubjectID, NewSubjectLabel)
                    NewSubject = fw.subjects.find_one('code="{}"'.format(NewSubjectLabel))
                    if (NewSubject.id != SubjectID):
                        if (args.noop or args.verbose):
                            print("%s : Updating session's subject from '%s' to '%s'" % (CmdName, OldSubjectLabel, NewSubjectLabel), file=sys.stderr)
                        if (not args.noop):
                            session.update({'subject': {'_id': NewSubject.id}})
                    elif (emesg):
                        print(emesg, file=sys.stderr)



            
