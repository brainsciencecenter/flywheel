#!/usr/bin/env python3

import sys
import re
import os
import flywheel
import json
import argparse
import fwgearutils


if __name__ == '__main__':
    import argparse

    CmdName = os.path.basename(sys.argv[0])

    ap = argparse.ArgumentParser()
    ap.add_argument('-v', '--verbose', action='store_true', help='verbose')
    ap.add_argument('project', nargs=1, type=str, default=None, help='group/project|ProjectID')

    args = ap.parse_args()

    ApiKey = fwgearutils.getApiKey(args)

    try:
        fw = flywheel.Client()
    except (OSError, Exception) as e:
        try:
            fw = flywheel.Client(ApiKey,root=True)
        
        except (OSError, Exception) as e2:
            print("e2",e2, file=sys.stderr)
            print("e",e, file=sys.stderr)
            sys.exit(1)

    if (args.project):
       try:
          container = fw.get(args.project[0])

          if ('gear_info' in container.keys()):
             ProjectID = container.parents.project
             project = fw.get(ProjectID)

       except flywheel.rest.ApiException as e:
          try:
              project = fw.lookup(args.project[0])

          except flywheel.rest.ApiException as e:
             print("%s : Cannot find project by '%s' : %s" % (CmdName, args.project[0], e.reason), file=sys.stderr)
             sys.exit(e.status)

    else:
       sys.exit(0)

    if (args.verbose):
        #print("Container", container)
        print("Subject", fw.get(container.parents.subject).label)
        print("Session", fw.get(container.parents.session).label)
        #print("Project", project)
    else:
        print("%s/%s" % (project.group,project.label))
