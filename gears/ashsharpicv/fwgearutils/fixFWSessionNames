#!/usr/bin/env python3

import sys
import re
import os
import flywheel
import json
import argparse
import fwgearutils
import datetime

if __name__ == '__main__':

    import argparse

    CmdName = os.path.basename(sys.argv[0])

    ap = argparse.ArgumentParser()
    ap.add_argument('-k', '--apikey', type=str, default=None, dest="apikey", help='apikey')
    ap.add_argument('-n', '--noop', action='store_true', help='show what the program would do, but do not do it')
    ap.add_argument('-v', '--verbose', action='store_true', help='show what the program is doing')
    ap.add_argument('project', nargs=1, type=str, default=None, help='group/project|ProjectID')

    args = ap.parse_args()

    ApiKey = fwgearutils.getApiKey(args)

    try:
        fw = flywheel.Client()
    except (OSError, Exception) as e:
        try:
            fw = flywheel.Client(ApiKey,root=True)
        
        except (OSError, Exception) as e2:
            print("e2",e2, file=sys.stderr)
            print("e",e, file=sys.stderr)
            sys.exit(1)

    if (args.project):
       try:
           container = fw.get(args.project[0])
           if ('gear_info' in container.keys()):
               ProjectID = container.parents.project
               project = fw.get(ProjectID)
           if (args.verbose or args.noop):
               print("%s : Got project '%s' via project ID '%s'" % (CmdName, project.label, args.project[0]), file=sys.stderr)

       except flywheel.rest.ApiException as e:
          try:
             project = fw.lookup(args.project[0])
             if (args.verbose or args.noop):
                 print("%s : Got project '%s' via project path '%s'" % (CmdName, project.label, args.project[0]), file=sys.stderr)

          except flywheel.rest.ApiException as e:
             print("%s : Cannot find project by '%s' : %s" % (CmdName, args.project[0], e.reason), file=sys.stderr)
             sys.exit(e.status)

    else:
       sys.exit(0)

    for line in sys.stdin:
        LineList = line.rstrip().split()

        try:
            session = fw.get(LineList[0])
            if (args.verbose or args.noop):
                print("%s : Got project '%s' session '%s'" % (CmdName, project.label, session.label), file=sys.stderr)


        except (flywheel.rest.ApiException) as e:
            print("%s : Cannot find session by '%s' : %s" % (CmdName, LineList[0], e.reason), file=sys.stderr)
            continue

        NewLabel = LineList[-1]
        OldLabel = session.label

        if (OldLabel == NewLabel):
            if (args.noop or args.verbose):
                print("%s : OldLabel '%s' == NewLabel '%s'. Skipping" % (CmdName, OldLabel, NewLabel), file=sys.stderr)
        else:
            MvString = "mv %s => %s" % (LineList[0], NewLabel)

            if (args.noop or args.verbose):
                print("%s : %s" % (CmdName, MvString))

            try:
                if (args.noop or args.verbose):
                    print("%s : Adding note '%s'" % (CmdName, MvString), file=sys.stderr)
                if (not args.noop):
                    session.add_note(MvString)

            except (flywheel.rest.ApiException) as e:
                print("%s : Cannot add note '%s' to session '%s' : %s" % (CmdName, MvString, session._id, e.reason), file=sys.stderr)
                continue

            try:
                if (args.noop or args.verbose):
                    print("%s : Changing session label from '%s' to '%s'" % (CmdName, OldLabel, NewLabel), file=sys.stderr)
                if (not args.noop):
                    session.update(label=LineList[-1])

            except (flywheel.rest.ApiException) as e:
                print("%s : Cannot update session '%s' with new label '%s'" % (CmdName, OldLabel, NewLabel), file=sys.stderr)
                continue

