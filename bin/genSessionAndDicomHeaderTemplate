#!/bin/bash

Args=( "$@" )

cat << 'EOL'
import "ScannerMap" as $Scanners;
import "SubjectMap" as $Subjects;

[
    "Scanner",
    "Date",
    "Path",
    "Code",
    "SessionID",
    "DeidentificationMethod",
EOL

for i in "${Args[@]:0:$((${#Args[@]} - 1))}"
do
	echo "    \"$i\","
done

echo "    \"${Args[@]:$((${#Args[@]} - 1))}\""

echo "],"

cat << 'EOL'
(    .label as $SessionLabel
   | ._id as $SessionID
   | .parents.subject as $SubjectID
   | .subject.code as $Code
   | .subject.label as $Label
   | .timestamp as $TimeStamp
   | if (((.acquisitions | length) > 0) and ((.acquisitions[0].files | length) > 0)) then
     .acquisitions[0].files[0]
        | .origin.id as $ScannerID
        | .info
          | [									

             if ($ScannerID | in($Scanners::Scanners[])) then			# 1
               $Scanners::Scanners[][$ScannerID]
             else
               $ScannerID
             end,

             $TimeStamp,							# 2

             if ($SubjectID | in($Subjects::Subjects[])) then			# 3
               $Subjects::Subjects[][$SubjectID] + "/" + $SessionLabel 
             else
               $SubjectID + "/" + $SessionLabel
             end,

             $Code,								# 4 - Subject
             $SessionID,							# 5

             if ((.DeidentificationMethod | type) == "array") then		# 6
               .DeidentificationMethod[0]
             else
                .DeidentificationMethod
             end,
EOL

for i in "${Args[@]:0:$((${#Args[@]} - 1))}"
do
	echo "             (.$i|@text),"
done

echo "             (.${Args[@]:$((${#Args[@]} - 1))}|@text)"

echo "            ]"

cat << 'EOL'
   else
     #"no acquisitions for \($SessionLabel) \($SessionID)"
     empty
   end
   ) | @csv

EOL
