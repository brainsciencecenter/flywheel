#!/bin/bash

CmdName=$(basename "$0")
FwDir=$(dirname $(dirname $(which "$0")))
FwLib="${FwDir}/lib"

Syntax="${CmdName} [-f][-m][-n][-u][-v][-t TmpDir] {Group/Project}"

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "$opt_n" ] || "$@"
}

while getopts fmnt:uv arg
do
	case "$arg" in
	     f|m|n|t|u|v)
		eval "opt_${arg}='${OPTARG:=1}'"
		;;
	esac
done
		
shift $(("${OPTIND}" - 1))

GroupProject="$1"

Group=$(echo "$GroupProject" | cut -f 1 -d /)
Project=$(echo "$GroupProject" | cut -f 2 -d /)
if (echo "$GroupProject" | grep -q /) && [ -n "$Group" ] && [ -n "$Project" ]
then
    true
else
	echo "${CmdName} : Missing or malformed Group/Project '$GroupProject'" 1>&2
	echo "${Syntax}" 1>&2
	exit 1
fi

DeleteTmpDir=False
if [ -n "$opt_t" ]
then
    TmpDir="$opt_t"
else
    TmpDir=$(mktemp -d "${TMPDIR:-/tmp}/FwId2LabelsDir-XXXXXXX")
    [ -z "$opt_m" ] && DeleteTmpDir=True
fi

[ -e "$TmpDir" ] || sys mkdir -p "$TmpDir"

[ -n "$opt_v" ] && opt_v=-v

SessionId2TimestampsActiveJsonFile="${TmpDir}/SessionId2TimestampsActive.json"
SessionId2TimestampsActiveCsvFile="${TmpDir}/SessionId2TimestampsActive.csv"
SessionId2TimestampsCommonCsvFile="${TmpDir}/SessionId2TimestampsCommon.csv"
SessionIdsToGet="${TmpDir}/SessionIdsToGet"
SessionsCachedJsonFile="${TmpDir}/SessionsCached.json"
SessionsCommonJsonFile="${TmpDir}/SessionsCommon.json"
SessionsNewJsonFile="${TmpDir}/SessionsNew.json"
SessionsUpdatedJsonFile="${TmpDir}/SessionsUpdate.json"

#
# *** How to get the project id for collections?
#
ProjectId=$(sys fwget -1 "${GroupProject}" | jq -r '._id')
if [ -z "$ProjectId" ]
then
    "${CmdName} : Can not find "$GroupProject" in flywheel.  Bailing" 1>&2
    exit 2
fi

sys fwfind -S -1 group="$Group" project="$ProjectId" | jq -r -L "$FwLib" 'include "FwLib"; {(._id): container2Timestamps(.) }'  | jq -r --slurp 'select(.) | add ' > "$SessionId2TimestampsActiveJsonFile"

if [ -e "$SessionsCachedJsonFile" ]
then
    sys jq -r -L "$FwLib" --slurpfile SessionId2TimestampsActive "$SessionId2TimestampsActiveJsonFile" 'include "FwLib"; container2Timestamps(.) as $Timestamps | select( (._id | in($SessionId2TimestampsActive[])) and ($Timestamps == $SessionId2TimestampsActive[][._id]) )' "$SessionsCachedJsonFile" > "$SessionsCommonJsonFile"

    sys jq -r -L "$FwLib" 'include "FwLib"; container2Timestamps(.) as $Timestamps | [ ._id, $Timestamps.created, $Timestamps.modified, $Timestamps.timestamp ] | @csv' "$SessionsCommonJsonFile" | sort -u  > "$SessionId2TimestampsCommonCsvFile"

    sys jq -r 'to_entries[] | [ .key, .value.created, .value.modified, .value.timestamp] | @csv' "$SessionId2TimestampsActiveJsonFile" | sort -u > "$SessionId2TimestampsActiveCsvFile"

    sys diff "$SessionId2TimestampsCommonCsvFile" "$SessionId2TimestampsActiveCsvFile" | grep '> ' | sed 's/^> //' | csvcut -c 1 | sort -u | grep '.' > "$SessionIdsToGet"
else
    sys cat /dev/null > "$SessionsCommonJsonFile"
    sys cat /dev/null > "$SessionId2TimestampsCommonCsvFile"
    sys jq -r 'to_entries[] | [ .key, .value.created, value.modified, value.timestamp] | @csv' "$SessionId2TimestampsActiveJsonFile" | sort -u > "$SessionId2TimestampsActiveCsvFile"
    sys csvcut -c 1 "$SessionId2TimestampsActiveCsvFile" > "$SessionIdsToGet"
fi

NSessionIdsToGet=$(wc -l < "$SessionIdsToGet")
if [ "$NSessionIdsToGet" -gt 0 ]
then
    sys fwget -v -N "$NSessionIdsToGet" -1 < "$SessionIdsToGet" > "$SessionsNewJsonFile"
else
    cat /dev/null > "$SessionsNewJsonFile"
fi

sys cat "$SessionsCommonJsonFile" "$SessionsNewJsonFile" > "$SessionsUpdatedJsonFile"

if [ -n "$opt_u" ] && [ $(jq . "$SessionsUpdatedJsonFile" | wc -l) -gt 1 ]
then
    sys mv "$SessionsUpdatedJsonFile" "$SessionsCachedJsonFile"
fi

