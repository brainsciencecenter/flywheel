#!/bin/bash

cmd=$(basename "$0")

#
# pushFWProjectContext -p cnds/RecodeDemo /tmp/json
#

while getopts "adgnpP:sv" arg
do
	case "$arg" in
	     a|d|g|n|p|P|s|v)
		eval "opt_${arg}=${OPTARG:=1}"
		;;
	esac
done

shift $((OPTIND - 1))

JQExpr=".context.project"
if [ -n "$opt_a" ]
then
	JQExpr=".context"

elif [ -n "$opt_g" ]
then
	JQExpr=".context.group"
elif [ -n "$opt_p" ]
then
	JQExpr=".context.project"
elif [ -n "$opt_s" ]
then
	JQExpr=".context.site"
elif [ -n "$opt_P" ]
then
	JQExpr="$opt_P"
fi

Project="$1"
OldProjectInfo=$(pullFWProjectInfo "$Project" | jq .)

if [ -n "${opt_n}${opt_v}" ]
then
    echo "$OldProjectInfo" 1>&2
fi

if [ -n "$2" ]
then
	if [ -e "$2" ]
	then
		Json=$(< "$2")
	else
		Json="$2"
	fi
else
	Json=$(cat)
fi

if [ -z "$opt_d" ]
then
	OldJsonFile=$(mktemp /tmp/${cmd}-XXXXX.json)
	echo "$OldProjectInfo" > "$OldJsonFile"
	echo "$cmd : OldProjectInfo written to '$OldJsonFile'" 1>&2
	echo "	   Run '$cmd -a $Project $OldJsonFile' to restore previous project info" 1>&2
fi

NewProjectJson=$(echo "$OldProjectInfo" | jq "${JQExpr} = ${Json}")

if [ -n "${opt_n}${opt_v}" ]
then
	echo "$NewProjectJson" 1>&2
fi

if [ -z "$opt_n" ]
then
	echo "$NewProjectJson" | pushFWProjectInfo "$Project"
fi


