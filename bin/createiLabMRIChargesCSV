#!/bin/bash

#
# createiLabMRIChargesCSV -s 3050653 2021-01-Sessions.csv > 2021-01-iLabMRICharges.csv
#
CmdName=$(dirname "$0")

syntax="${CmdName} [-f flywheeldir][-s service_request_id] {SessionsCSVFile}"

function reformatSessions () {
    local ScannerRegEx='"?('"$Scanners"')"?,'

    grep -P "^$ScannerRegEx" "$1" | grep -vi 'not-flywheel' | grep -vi techdev | grep -vi phantom | sed -E 's/,("?)([0-9]{4}-[0-9]{2}-[0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})([+-][0-9]{4})("?),/,\1\2\1,\1\3.\4.\5\6\7,/; s/ /_/g' | csvcut -c 1,2,3,4,6,11 | sed 's/,/ /g'
}

while getopts f:s: arg
do
	case "$arg" in
	     f|s)
		eval "opt_${arg}=${OPTARG:=1}"
		;;
	esac
done

shift $(($OPTIND - 1))

if [ -n "$opt_s" ]
then
	ServiceRequestID="$opt_s"
fi

if [ -z "$FlywheelUtilsDir" ]
then
	if echo "$0" | grep -q /
	then
		FlywheelUtilsDir=$(dirname $(dirname $(realpath "$0")))
	else
		FlywheelUtilsDir=$(dirname $(dirname $(which "$0")))
	fi
fi

# ** Read dynamically
ServiceRequestID=RadiologyiLabBenNumber
ServiceRequestID=$(yq -jP eval < "${FlywheelUtilsDir}/bin/iLabServiceRequestIDMap" | jq '.["RequestIds"][][]|select((.aliases[])|match("Radiology/MRIScans")) | .service_request_id')

# *** Need to read this dynamically
declare -A ServiceIDs=( [HUP6]=455017 [SC3T]=454998 [SC7T]=455018 )
Scanners=$(echo "${!ServiceIDs[@]}" | sed 's/ /|/g')

ChargeHeaders=(
	service_id
	note
	service_quantity
	price
	purchased_on
	service_request_id
	owner_email
	pi_email_or_group_id
	payment_number
)

echo "${ChargeHeaders[@]}" | sed 's/ /,/g '

#
# Want Scanner, Date, FWUID
#
# Date goes from "2019-12-01T11:22:03-0400" => "2019-12-01","11:22:03-0400" => "2019-12-01","11.22.03-0400"
#

#reformatSessions "$1"

#exit 0

while read Scanner Date Time Path FWUID StudyComments
do
        GroupProject=$(echo "$Path" | cut -f 1,2 -d /)

	#
	# The template doesn't have fields for errors or warnings
	#
	echo '"$service_id","$note","$service_quantity","$price","$purchased_on","$service_request_id","$owner_email","$pi_email_or_group_id","$payment_number"' | (

	export service_id=${ServiceIDs[$Scanner]}
	export note="${FWUID} ${Scanner} ${Date} ${Time} ${GroupProject} ${StudyComments}"
	export service_quantity=1
	export purchased_on=$Date
	export service_request_id=$ServiceRequestID

	envsubst)
	#
	# iLab chokes on colons and semicolons in the quoted notes field. Gaylord 2019-12-18
	# \1 is "
	# \2 is 2019-12-12
	# \3 is hours
	# \4 is minutes
	# \5 is seconds
	# \6 is TZ offset from GMT
	# \7 is "

	# Columns are
	# 1 = Scanner
	# 2 = Date
	# 3 = Time
	# 4 = SessionID
done < <(reformatSessions "$1")

