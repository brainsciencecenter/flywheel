#!/bin/bash

#
# Run in the chead:/usr/local/Flywheel/Fw2InddCache
# ex:
#   Download metadata for all group/projects transferring metadat to INDD
#     getAcquisitionMetadata4Indd
#
#   Only for dwolklab/NACC-SC
#     getAcquisitionMetadata4Indd dwolklab/NACC-SC
#
#   Aggregate all mri and pet info
#     getAcquisitionMetadata4Indd -a 

CmdName=$(basename "$0")

syntax="${CmdName} [-a][-f][-n][-Q][-v] [[group/project] [findargs]"
GroupProjects=()

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "$opt_n" ] || "$@"
}


function getProjectId {
    local GroupProject="$1"
    local Group=$(echo "$1" | cut -f 1 -d /)
    local Project=$(echo "$1" | cut -f 2 -d /)

    if [ "$Group" == "Collections" ]
    then
	ProjectId=$(fwget -1 -c all | jq -r '.[] | select(.label == "'"$Project"'") | ._id')
    else
	ProjectId=$(fwget -1 "$GroupProject" | jq -r '._id')
    fi

    echo "$ProjectId"
}

function groupProject2csv {
    local extension="$1"

    shift

    for f in "$@"
    do
	Project=$(echo "$f" | cut -f 2 -d /)
	CsvFile="${f}/${Project}_${extension}.csv"
	[ -e "$CsvFile" ] && echo "$CsvFile"
    done
}

while getopts afnQv arg
do
    case "$arg" in
	a|f|n|Q|v)
	    eval "opt_${arg}=${OPTARG:=1}"
	    ;;
    esac
done

shift $(($OPTIND - 1))

[ -n "$opt_f" ] && opt_f=-f
[ -n "$opt_n" ] && opt_n=-n
[ -n "$opt_v" ] && opt_v=-v

if [ "$opt_Q" ]
then
    opt_Q=-Q
fi

if [ -n "$1" ]
then
    for l in "$@"
    do
	GroupProjects+=( $(echo "$l" | sed 's,/$,,')  )
    done
else
    while read line
    do
	l=$(echo "$line" | sed 's,/$,,')
   	GroupProjects+=(  "$l" )
    done < <( fwfind -p 'info.labels.ExportToINDD=true' | jq -r '.[]|"\(.group)/\(.label)"' | sort )
fi

if [ -z "$opt_Q" ]
then
    
    for gp in "${GroupProjects[@]}"
    do
	TmpDir="$gp"

	[ -n "$opt_v" ] && echo "'$gp'"

	[ -d "$gp" ] || mkdir -p "$gp"

	CachedAcquisitionsJsonFile=$(echo "$gp"-CachedFwAcquisitions.json | sed 's,/,-,')
	[ -e "$CachedAcquisitionsJsonFile" ] || sys touch "$CachedAcquisitionsFile"

	# Sessions are done without any other input
	SessionCachedJsonFile="${gp}/SessionCached.json"
	SessionId2TimestampsActiveCsvFile="${gp}/SessionActiveIds.csv"

	if [ "$Group" = 'Collections' ]
	then
	    fwget -1 -raG "Collections/${Project}" | jq -r -L ~/flywheel/lib 'include "FwLib";  .sessions[] |  ._id as $ContainerId | container2Timestamps(.) | [ $ContainerId, .created, .modified, .timestamp ]| @csv ' | tail +2 | sed 's/\.[0-9][0-9][0-9][0-9][0-9][0-9]\([+-]\)/\1/g; s/,$//; s/ /T/' > "$SessionId2TimestampsActiveCsvFile"
	else
	    sys fwview -v -c session -f 'created > 1970-01-01' -p "$gp" session.id session.created session.modified session.timestamp | tail +2 | sed 's/\.[0-9][0-9][0-9][0-9][0-9][0-9]\([+-]\)/\1/g; s/,$//; s/ /T/' > "$SessionId2TimestampsActiveCsvFile"
	fi

	SessionId2TimestampsActiveJsonFile="${TmpDir}/SessionId2TimestampsActive.json"
	sys updateCachedJsonFile -u -p Session -j "$SessionId2TimestampsActiveJsonFile" -t "$gp" -c "$SessionId2TimestampsActiveCsvFile" "$SessionCachedJsonFile"

	Id2LabelsJsonFile="${TmpDir}/Id2Labels.json"

	(
	    if [ "$Group" = 'Collections' ]
	    then
		sys fwsearch -r subject 'collection.label = '"\"${Project}\" | jq -r '.[]| { (.group._id): (.group.label), (.project._id): (.project.label)}, { (.subject._id): (.subject.code) }' | jq -s 'add' ;
	    else
		sys fwsearch -r subject 'group._id = '"\"${Group}\""' AND project.label = '"\"${Project}\" | jq -r '.[]| { (.group._id): (.group.label), (.project._id): (.project.label)}, { (.subject._id): (.subject.code) }' | jq -s 'add' ;
	    fi
	    
	    sys jq -r '{ (._id): (.label) }' "$CachedAcquisitionsJsonFile" | jq -r -s 'add'
	) | jq -s 'add' > "$Id2LabelsJsonFile"

	#
	# Need 
	#   Id2Labels.json
	#   SessionId2TimestampsActive.json
	#   SessionId2Notes.json
	#   SessionId2Tags.json
	SessionId2NotesJsonFile="${TmpDir}/SessionId2Notes.json"
	sys jq --slurp '[ .[]| { (._id): (if (.notes) then .notes | map(.text) | join("\n") else "" end) } ] | add' "$SessionCachedJsonFile" > "$SessionId2NotesJsonFile"

	SessionId2TagsJsonFile="${TmpDir}/SessionId2Tags.json"
	sys jq --slurp '[.[] | { (._id): (.tags|join(":"))}] | add ' "$SessionCachedJsonFile" > "$SessionId2TagsJsonFile"

	#sys time fwUpdateCachedSessionJsonFile $opt_n $opt_v -u -t "$gp" "$gp"
	#sys time fwUpdateSessionNotes+Tags $opt_n $opt_v -t "$gp" "$gp"

	# Ids are done from a possibly out of date cached acquisitions file
	#sys time fwUpdateId2JsonFile $opt_n $opt_v -u -t "$gp" "$CachedAcquisitionsFile"

	# Ids are coming from the cached acquisitions, which we update now. 
	ActiveAcquisitionIdsCsvFile="${gp}/AcquisitionActiveIds.csv"
	sys fwview -v -c acquisition -f 'created > 1970-01-01' -p "$gp" acquisition.id acquisition.created acquisition.modified acquisition.timestamp | tail +2 | sed 's/\.[0-9][0-9][0-9][0-9][0-9][0-9]\([+-]\)/\1/g; s/,$//; s/ /T/' > "$ActiveAcquisitionIdsCsvFile"

	ActiveAcquisitionIdsJsonFile="${gp}/AcquisitionActiveIds.json"
	sys updateCachedJsonFile -u -p Acquisitions -j "$ActiveAcquisitionIdsJsonFile" -t "$gp" -c "$ActiveAcquisitionIdsCsvFile" "$CachedAcquisitionsJsonFile"

	#sys time fwUpdateCachedAcquisitionJsonFile $opt_f $opt_n $opt_v -u -t "$gp" -c "$CachedAcquisitionsFile" "$gp"

	sys syncAcqData2Indd $opt_f $opt_n $opt_v -d "$gp" -c "$CachedAcquisitionsJsonFile" "$gp"

	ProjectId=$(getProjectId "$gp")
	InddRegEx=$(fwget -1 "$ProjectId" | jq -r '.info.labels.INDDRegEx|select(. != null)')
	if [ -n "$InddRegEx" ]
	then
	    sed -E -i "${InddRegEx}" ${gp}/*.csv
	fi

	done

fi

#
# Flywheel groups have to begin with lower case letter.  Collections is upper case
#
if [ -n "$opt_a" ]
then
    (head -q -n 1 $(groupProject2csv mri "${GroupProjects[@]}") | sort -u; tail -q -n +2 $(groupProject2csv mri "${GroupProjects[@]}") | sed -r 's/(,*)([0-9]{6})([_x])([0-9]{2}),/\1\2.\4,/g' | grep -P '^\d{6}([_\.x]\d{2})?,' | sort -u) > fw_mri.csv
    (head -q -n 1 $(groupProject2csv pet "${GroupProjects[@]}") | sort -u; tail -q -n +2 $(groupProject2csv pet "${GroupProjects[@]}") | sed -r 's/(,*)([0-9]{6})([_x])([0-9]{2}),/\1\2.\4,/g' | grep -P '^\d{6}([_\.x]\d{2})?,' | sort -u) > fw_pet.csv
    (head -q -n 1 $(groupProject2csv bids "${GroupProjects[@]}") | sort -u; tail -q -n +2 $(groupProject2csv bids "${GroupProjects[@]}") | sort -u) > fw_bids.csv
fi
