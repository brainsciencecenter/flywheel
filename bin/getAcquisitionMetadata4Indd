#!/bin/bash

#
# Run in the chead:/usr/local/Flywheel/Fw2InddCache
# ex:
#   Download metadata for all group/projects transferring metadat to INDD
#     getAcquisitionMetadata4Indd
#
#   Only for dwolklab/NACC-SC
#     getAcquisitionMetadata4Indd dwolklab/NACC-SC
#
#   Aggregate all mri and pet info
#     getAcquisitionMetadata4Indd -a 

CmdName=$(basename "$0")

syntax="${CmdName} [-a][-f][-n][-Q][-v] [[group/project] [findargs]"
GroupProjects=()

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "$opt_n" ] || "$@"
}


function getProjectId {
    local GroupProject="$1"
    local Group=$(echo "$1" | cut -f 1 -d /)
    local Project=$(echo "$1" | cut -f 2 -d /)

    if [ "$Group" == "Collections" ]
    then
	ProjectId=$(fwget -1 -c all | jq -r '.[] | select(.label == "'"$Project"'") | ._id')
    else
	ProjectId=$(fwget -1 "$GroupProject" | jq -r '._id')
    fi

    echo "$ProjectId"
}

while getopts afnQv arg
do
    case "$arg" in
	a|f|n|Q|v)
	    eval "opt_${arg}=${OPTARG:=1}"
	    ;;
    esac
done

shift $(($OPTIND - 1))

[ -n "$opt_f" ] && opt_f=-f
[ -n "$opt_n" ] && opt_n=-n
[ -n "$opt_v" ] && opt_v=-v

if [ "$opt_Q" ]
then
    opt_Q=-Q
fi

if [ -n "$1" ]
then
    GroupProjects+=( "$1" )
    shift
else
    while read line
    do
    	GroupProjects+=( $line )
    done < <( fwfind -p 'info.labels.ExportToINDD=true' | jq -r '.[]|"\(.group)/\(.label)"' | sort )
fi

if [ -n "$opt_Q" ]
then
    
    for gp in "${GroupProjects[@]}"
    do
	[ -n "$opt_v" ] && echo "'$gp'"

	[ -d "$gp" ] || mkdir -p "$gp"


	CachedAcquisitionsFile=$(echo "$gp"-CachedFwAcquisitions.json | sed 's,/,-,')

	# Sessions are done without any other input
	sys time fwUpdateCachedSessionJsonFile $opt_n $opt_v -u -t "$gp" "$gp"
	sys time fwUpdateSessionNotes+Tags $opt_n $opt_v -t "$gp" "$gp"

	# Ids are done from a possibly out of date cached acquisitions file
	sys time fwUpdateId2JsonFile $opt_n $opt_v -u -t "$gp" "$CachedAcquisitionsFile"

	# Ids are coming from the cached acquisitions, which we update now. 
	sys time fwUpdateCachedAcquisitionJsonFile $opt_f $opt_n $opt_v -u -t "$gp" -c "$CachedAcquisitionsFile" "$gp"

	sys time syncAcqData2Indd $opt_f $opt_n $opt_v -d "$gp" -c "$CachedAcquisitionsFile" "$gp"

	ProjectId=$(getProjectId "$gp")
	InddRegEx=$(fwget -1 "$ProjectId" | jq -r '.info.labels.INDDRegEx|select(. != null)')
	if [ -n "$InddRegEx" ]
	then
	    sed -E -i "${InddRegEx}" ${gp}/*.csv
	fi

	done

fi

#
# Flywheel groups have to begin with lower case letter.  Collections is upper case
#
if [ -n "$opt_a" ]
then
    (head -q -n 1 [a-z]*/*/*MRI.csv | sort -u; tail -q -n +2 [a-z]*/*/*MRI.csv | sed -r 's/(,*)([0-9]{6})([_x])([0-9]{2}),/\1\2.\4,/g' | grep -P '^\d{6}([_\.x]\d{2})?,' | sort -u) > fw_mri.csv
    (head -q -n 1 [a-z]*/*/*PET.csv | sort -u; tail -q -n +2 [a-z]*/*/*PET.csv | sed -r 's/(,*)([0-9]{6})([_x])([0-9]{2}),/\1\2.\4,/g' | grep -P '^\d{6}([_\.x]\d{2})?,' | sort -u) > fw_pet.csv
    (head -q -n 1 [a-z]*/*/*Bids.csv | sort -u; tail -q -n +2 [a-z]*/*/*Bids.csv | sort -u) > fw_bids.csv
fi
