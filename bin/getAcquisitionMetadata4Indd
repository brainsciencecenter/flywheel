#!/bin/bash

#
# Run in the chead:/usr/local/Flywheel/Fw2InddCache
# ex:
#   Download metadata for all group/projects transferring metadat to INDD
#     getAcquisitionMetadata4Indd
#
#   Only for dwolklab/NACC-SC
#     getAcquisitionMetadata4Indd dwolklab/NACC-SC
#
#   Aggregate all mri and pet info
#     getAcquisitionMetadata4Indd -a 

CmdName=$(basename "$0")

syntax="${CmdName} [-a][-f][-n][-Q][-v] [[group/project] [findargs]"

FwDir=$(dirname $(dirname $(realpath $(which "$0"))))
FwLib="${FwDir}/lib"

GroupProjects=()

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "$opt_n" ] || "$@"
}


function groupProject2csv {
    local extension="$1"

    shift

    for f in "$@"
    do
	Project=$(echo "$f" | cut -f 2 -d /)
	CsvFile="${f}/${Project}_${extension}.csv"
	[ -e "$CsvFile" ] && echo "$CsvFile"
    done
}

while getopts afnQv arg
do
    case "$arg" in
	a|f|n|Q|v)
	    eval "opt_${arg}=${OPTARG:=1}"
	    ;;
    esac
done

shift $(($OPTIND - 1))

[ -n "$opt_f" ] && opt_f=-f
[ -n "$opt_n" ] && opt_n=-n
[ -n "$opt_v" ] && opt_v=-v

if [ "$opt_Q" ]
then
    opt_Q=-Q
fi

if [ -n "$1" ]
then
    for l in "$@"
    do
	GroupProjects+=( $(echo "$l" | sed 's,/$,,')  )
    done
else
    while read line
    do
	l=$(echo "$line" | sed 's,/$,,')
   	GroupProjects+=(  "$l" )
    done < <( fwfind -p 'info.labels.ExportToINDD=true' | jq -r '.[]|"\(.group)/\(.label)"' | sort )
fi

if [ -z "$opt_Q" ]
then
    
    for gp in "${GroupProjects[@]}"
    do
	TmpDir="$gp"

	[ -n "$opt_v" ] && echo "'$gp'"

	[ -d "$gp" ] || mkdir -p "$gp"

	CachedAcquisitionsJsonFile=$(echo "$gp"-CachedFwAcquisitions.json | sed 's,/,-,')
	[ -e "$CachedAcquisitionsJsonFile" ] || sys touch "$CachedAcquisitionsJsonFile"

	read Group Project < <(echo "$gp" | sed 's,/, ,')

	SessionJsonFile="${gp}/Session.json"
	SessionId2TimestampsJsonFile="${TmpDir}/SessionId2Timestamps.json"
	SessionId2NotesJsonFile="${TmpDir}/SessionId2Notes.json"
	SessionId2TagsJsonFile="${TmpDir}/SessionId2Tags.json"
	if [ "$Group" = 'Collections' ]
	then
	    #
	    # Collections are small enough, we can just grab everything 
	    #
	    ProjectJsonFile="${TmpDir}"
	    fwget -1 -raG "Collections/${Project}" > "$ProjectJsonFile"
	    jq '.sessions[] | { (._id): (if ((.notes[] | length) > 0) then .notes[] | sub("[\n\r]"; " ") else "" end ) } > '$SessionId2NotesJsonFile"
	    jq '.sessions[] | { (._id): (if ((.tagss[] | length) > 0) then .tags[] | join(":") else "" end ) } > '$SessionId2TagsJsonFile"

	else
	    sys fwview -c session -F json -p "$gp" session.{id,label,created,modified,timestamp,notes,tags} | jq . > "$SessionJsonFile"
	    sys jq -f "${FwLib}/fwview2SessionId2Timestamps.jq" "$SessionJsonFile" > "$SessionId2TimestampsJsonFile"
	    sys jq -f "${FwLib}/fwview2SessionId2Notes.jq" "$SessionJsonFile" > "$SessionId2NotesJsonFile"
	    sys jq -f "${FwLib}/fwview2SessionId2Tags.jq" "$SessionJsonFile" > "$SessionId2TagsJsonFile"
	fi

	# Ids are coming from the cached acquisitions, which we update now. 
	ActiveAcquisitionIdsCsvFile="${gp}/AcquisitionActiveIds.csv"
	sys fwview -c acquisition -p "$gp" acquisition.{id,created,modified,timestamp} | tail -n +2 | sed 's/\.[0-9][0-9][0-9][0-9][0-9][0-9]\([+-]\)/\1/g; s/,$//; s/ /T/' > "$ActiveAcquisitionIdsCsvFile"

	ActiveAcquisitionIdsJsonFile="${gp}/AcquisitionActiveIds.json"
	sys updateCachedJsonFile $opt_v -u -p Acquisitions -j "$ActiveAcquisitionIdsJsonFile" -t "$gp" -c "$ActiveAcquisitionIdsCsvFile" "$CachedAcquisitionsJsonFile"

	Id2LabelsJsonFile="${TmpDir}/Id2Labels.json"
	(
	    if [ "$Group" = 'Collections' ]
	    then
		# Can't use fwsearch on collections
		# get the Collection id to label
		# then all the labels for the parents of the sessions we collected in the $ProjectJsonfile
		sys fwget -1 "$gp" | jq -r '{ (._id): .label }'
		sys jq -r '{ (._id): (if (._id | test("^[a-z]+$")) then ._id else .label end) }' "$ProjectJsonFile"
	    else
	        FwSearch2SessionIds2LabelsJq='[
                    .[] 
                  |   { (.group._id): .group._id }
                    , { (.project._id): .project.label }
                    , { (.subject._id): .subject.code }
                ] | add
                  | to_entries[]
                  | { (.key): (.value) }'
	    
		#  get the group, project and subject entries for Id2Labels.
		#  don't want to redirect to a file
		sys fwsearch -r subject 'group._id = "'"$Group"'" AND project.label = "'"$Project"'"' |  jq "$FwSearch2SessionIds2LabelsJq"
	    fi
	    sys jq '.data[] | { (.["session.id"]): (.["session.label"]) }' "$SessionJsonFile"
#	    sys jq '{ (._id): (.label) }' "$CachedAcquisitionsJsonFile"
	) | jq -s 'sort | add' > "$Id2LabelsJsonFile"


	sys syncAcqData2Indd $opt_f $opt_n $opt_v -d "$gp" -c "$CachedAcquisitionsJsonFile" "$gp"

	InddRegEx=$(fwget -1 "$gp" | jq -r '.info.labels.INDDRegEx|select(. != null)')
	if [ -n "$InddRegEx" ]
	then
	    sed -E -i "${InddRegEx}" ${gp}/*.csv
	fi

	done

fi

#
# Flywheel groups have to begin with lower case letter.  Collections is upper case
#
if [ -n "$opt_a" ]
then
    (head -q -n 1 $(groupProject2csv mri "${GroupProjects[@]}") | sort -u; tail -q -n +2 $(groupProject2csv mri "${GroupProjects[@]}") | sed -r 's/(,*)([0-9]{6})([_x])([0-9]{2}),/\1\2.\4,/g' | grep -P '^\d{6}([_\.x]\d{2})?,' | sort -u) > fw_mri.csv
    (head -q -n 1 $(groupProject2csv pet "${GroupProjects[@]}") | sort -u; tail -q -n +2 $(groupProject2csv pet "${GroupProjects[@]}") | sed -r 's/(,*)([0-9]{6})([_x])([0-9]{2}),/\1\2.\4,/g' | grep -P '^\d{6}([_\.x]\d{2})?,' | sort -u) > fw_pet.csv
    (head -q -n 1 $(groupProject2csv bids "${GroupProjects[@]}") | sort -u; tail -q -n +2 $(groupProject2csv bids "${GroupProjects[@]}") | sort -u) > fw_bids.csv
fi
