#!/bin/bash

# want to warn users that next week we'll delete things that are three months old and here is what is on the block
# date --date="now + 1 week - 3 months " +'%Y-%m-%d'

CmdName=$(basename "$0")

syntax="${CmdName} [-d TooOldDate][-m Month][-n][-t][-v][-w]"

function sys {
	 [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
	 [ -n "$opt_n" ] || "$@"
}

while getopts d:m:ntvw arg
do
	case "$arg" in
	     d|m|n|t|v|w)
		eval "opt_${arg}='${OPTARG:=1}'"
		;;
	esac
done

shift $(($OPTIND - 1))

if [ -n "$1" ]
then
	GroupProjects="$@"
else
	GroupProjects=$(jq -r '[.group,.label]|@csv' /tmp/json | sort -u | sed 's/\"//g; s+,+/+')
fi

MinAge="3 months"
if [ -n "$opt_m" ]
then
    MinAge="$opt_m"
    Args+=( -m "$MinAge" )
fi

ToOldDate=$(date --date="now - $MinAge" +'%Y-%m-%d')
if [ -n "$opt_d" ]
then
    TooOldDate="$opt_d"

    Args+=( -d "$TooOldDate" )
fi

if [ -n "$opt_t" ]
then
    Args+=( -t )
fi

for gp in $GroupProjects
do
	Group=$(echo "$gp" | cut -f 1 -d /)
	Project=$(echo "$gp" | cut -f 2 -d /)

	SessionsCsv=$(getOldSessions "${Args[@]}" -g "$Group" -p "$Project" -t)
	if [ "$opt_w" ]
	then
	       echo "$SessionsCsv"
	else
	   SessionUids=$(echo "$SessionsCsv" | csvcut -c SessionId | tail +2 | sort -u)
	   if [ -n "$SessionUids" ]
	   then
	       sys fwrm $SessionUids
	   else
	       echo "${CmdName} : ${gp} : No Sessions Scheduled to be purged" 1>&2
	   fi
	fi
done
