#!/bin/bash

CmdName=$(basename "$0")
FwDir=$(dirname $(dirname $(which "$0")))
FwLib="${FwDir}/lib"

Syntax="${CmdName} [-f]{-i Id2LabelsJsonFile}{-j ActiveId2TimestampsJsonFile}[-n][-p Prefix][-u][-v][-t TmpDir] CachedJsonFile"

# updateCachedJsonFile -u -t holder/IcvMarking -i holder/IcvMarking/Id2Labels.json -j holder/IcvMarking/AcquisitionId2Timestamps.json holder-IcvMarking-CachedFwAcquisitions.json

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "$opt_n" ] || "$@"
}

while getopts i:j:np:t:uv arg
do
	case "$arg" in
	     i|j|n|p|t|u|v)
		eval "opt_${arg}='${OPTARG:=1}'"
		;;
	esac
done
		
shift $(("${OPTIND}" - 1))

CachedJsonFile="$1"

[ -n "$opt_v" ] && opt_v='-v'

# Changing the container label _does_ update the modification time. May take a few minutes

TmpDir='/tmp' 
[ -n "$opt_t" ] && TmpDir="$opt_t"
[ -e "$TmpDir" ] || sys mkdir -p "$TmpDir"

Prefix=""
[ -n "$opt_p" ] && Prefix="$opt_p"

IdsToGet="${TmpDir}/${Prefix}IdsToGet"

if [ -z "$opt_i" ]
then
    echo "${CmdName}: missing -i Id2LabelsJsonFile option" 1>&2
    echo "$Syntax" 1>&2
    exit 1
fi

Id2LabelsJsonFile="$opt_i"

if [ -z "$opt_j" ]
then
    echo "${CmdName}: missing -j ActiveId2TimestampsJsonFile option" 1>&2
    echo "$Syntax" 1>&2
    exit 1
fi
ActiveId2TimestampsJsonFile="$opt_j"

CommonJsonFile="${TmpDir}/${Prefix}Common.json"
if [ -e "$CachedJsonFile" ]
then
    sys jq -r --slurpfile Id2Labels "$Id2LabelsJsonFile" --slurpfile ActiveId2Timestamps "$ActiveId2TimestampsJsonFile" -L "$FwLib" 'include "FwLib"; container2Timestamps(.) as $Timestamps | select( (._id | in($ActiveId2Timestamps[])) and ($Timestamps == container2Timestamps($ActiveId2Timestamps[][._id])) and (.parents.subject | in($Id2Labels[])) and (.parents.session | in($Id2Labels[])) )' "$CachedJsonFile" > "$CommonJsonFile"

    CommonIdsFile="${TmpDir}/${Prefix}CommonIds"
    if [ -s "$CommonJsonFile" ]
    then
	jq -r '._id' "$CommonJsonFile" > "$CommonIdsFile"
    else
	echo '{}' > "$CommonIdsFile"
    fi

    sys diff <(sort -u "$CommonIdsFile")  <(jq -r 'keys[]' "$ActiveId2TimestampsJsonFile" | sort -u) | grep '^> ' | sed 's/^> //' | sort -u | grep '.' > "$IdsToGet"
else
    sys cat /dev/null > "$CommonJsonFile"
    sys jq '._id' "$ActiveId2TimestampsJsonFile" > "$IdsToGet"
fi

NewJsonFile="${TmpDir}/${Prefix}New.json"

NIdsToGet=$(wc -l < "$IdsToGet")
if [ "$NIdsToGet" -gt 0 ]
then
    [ -n "$opt_v" ] && (echo "${CmdName} : getting new ${Prefix} Ids") 1>&2

    sys fwget -1 -v -N "$NIdsToGet" < "$IdsToGet" > "$NewJsonFile"
else
    cat /dev/null > "$NewJsonFile"
fi

UpdatedJsonFile="${TmpDir}/${Prefix}Updated.json"
sys cat "$CommonJsonFile" "$NewJsonFile" > "$UpdatedJsonFile"

if [ -n "$opt_u" ] && [ $(jq . "$UpdatedJsonFile" | wc -l) -gt 1 ]
then
    sys mv "$UpdatedJsonFile" "$CachedJsonFile"
fi

