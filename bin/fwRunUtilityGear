#!/usr/bin/python3

import argparse
import fwgearutils
import flywheel
import json
import logging
import os
import pyjq
import re
import sys
import time

def runGear(gear, inputs, dest):
   """Submits a job with specified gear and inputs.
    
   Args:
        gear (flywheel.Gear): A Flywheel Gear.
        inputs (dict): Input dictionary for the gear.
        dest (flywheel.container): A Flywheel Container where the output will be stored.
        
   Returns:
        str: The id of the submitted job.
        
   """
   try:
        # Run the gear on the inputs provided, stored output in dest constainer and returns job ID
        gear_job_id = gear.run(inputs=inputs, destination=dest)
        logging.debug('Submitted job %s', gear_job_id)
        return gear_job_id
   except flywheel.rest.ApiException:
        logging.exception('An exception was raised when attempting to submit a job for %s', file_obj.name)


if __name__ == '__main__':

    CmdName = os.path.basename(sys.argv[0])

    logging.basicConfig(format='%(message)s')

    ap = argparse.ArgumentParser()
    ap.add_argument('-d', '--debug', default=False,  action='store_true', help='debug')
    ap.add_argument('-g', '--gear-name', required=True, action='store', help='gear name')
    ap.add_argument('-t', '--tag', required=True,  action='store', help='gear input key')
    ap.add_argument('-v', '--version', action='store', help='gear version to run')
    ap.add_argument('-w', '--wait', default=False,  action='store_true', help='wait for job completion')

    ap.add_argument('acqfilepaths', nargs='+', type=str, action='store', help='acquisition filename paths')
    #ap.add_argument(metavar='AcqFile', nargs='+',  dest='acqfiles',  type=str, default=None, help='AcquisitionFileName pairs')

    args = ap.parse_args()

    InputKey = args.tag
    Version = args.version

    fw = fwgearutils.getFW(args)
    if (not fw):
        print("%s : unable to initialize flywheel object" % (CmdName), file=sys.stderr)
        sys.exit(1)

    gear = fw.lookup('gears/{}'.format(args.gear_name))
    # *** should check if the gear isn't found

    for fn in args.acqfilepaths:
       print("'{}'".format(fn))

       try:
          file_obj = fw.lookup(fn)
       except (flywheel.rest.ApiException) as e:
          print("{} : No such acquisition '{}'".format(CmdName,fn), file=sys.stderr)
          continue

       dest = file_obj.parent
       job_id = runGear(gear,{InputKey: file_obj}, dest)

       if args.wait:
          while True:
             time.sleep(1)
             job_info = fw.get_job(job_id)
             if (args.debug):
                print("{} : Job {} status {}".format(CmdName,job_id, job_info.state), file=sys.stderr)
             if (job_info.state == 'complete'):
                break
