#!/bin/env python3

import argparse
import csv
import flywheel
import fwgearutils
import json
import math
import os
import pathlib
import pyjq
import re
import sys

from pprint import pprint

CmdName = sys.argv[0]

ap = argparse.ArgumentParser()

ap.add_argument('-d', '--download-dir', action='store', help='base directory to download scans do.  Current directory is default.')
ap.add_argument('-f', '--force', action='store_true', help='force download')
ap.add_argument('-n', '--noop', action='store_true', help='do not actually do anything.')
ap.add_argument('-v', '--verbose', action='store_true', help='show what is being done')
ap.add_argument('scans', nargs='*', help='list of acquisitionsid:scanid:filenames')
args = ap.parse_args()

fw = fwgearutils.getFW(args, exhaustive=True)

if (args.download_dir):
    BaseDownloadDir = args.download_dir + '/'
else:
    BaseDownloadDir = ""

CsvData = None

with (open(args.scans[0], 'r') if len(args.scans) >= 1 else sys.stdin) as f:
    CsvData = list(csv.DictReader(f))

    FilePathList = pyjq.all('.[]|select(.AcquisitionId|test("...."))|{"AcquisitionId": .AcquisitionId, "FilePath": .FilePath, "FileId": .FileId}',CsvData)

AcquisitionIds = {}
for row in FilePathList:

    if (not row['FilePath'] in AcquisitionIds.keys()):
        AcquisitionIds[row['FilePath']] = {'AcquisitionId':  []}

    Acq = AcquisitionIds[row['FilePath']] 
    Acq['AcquisitionId'].append(row['AcquisitionId'])


Dups = pyjq.all('[.FilePath as $FilePath| to_entries | .[] | select((.value.AcquisitionId | length) > 1)] | from_entries', AcquisitionIds)[0]
print(json.dumps(Dups, indent=2))

for row in CsvData:
    (AcquisitionId, FilePath, FileId)  = (row['AcquisitionId'], row['FilePath'], row['FileId'])

    if (not AcquisitionId):
        continue

    AcquisitionFileName = os.path.basename(FilePath)
    if (FilePath in Dups.keys()):
        BaseFileName=re.sub('(?P<extension>(.nii.gz|.dicom.zip))$', '_{}\g<extension>)'.format(AcquisitionId), AcquisitionFileName)
    else:
        BaseFileName = AcquisitionFileName

    FileDir = BaseDownloadDir + os.path.dirname(FilePath)

    try:
        Acquisition = fw.get(AcquisitionId)
    except (flywheel.rest.ApiException) as e:
        print("{} : acquisition '{}' not found. Skipping. '{}'".format(CmdName, AcquisitionId, str(e.detail)), file=sys.stderr)
        continue

    # *** Should put a message out if there isnt' a file with this name in the acquisition
    ScanFiles = list(filter(lambda f: f.id == FileId, Acquisition.get_files()))
    if (len(ScanFiles) != 1):
        print("{} : Acquisition '{}' has {} file(s) with id '{}'".format(CmdName, AcquisitionId, len(ScanFiles), FileId), file=sys.stderr)
        continue

    ScanFile = ScanFiles[0]

    if (not os.path.isdir(FileDir)):
        if (args.noop or args.verbose):
            print("mkdir -p '{}'".format(FileDir), file=sys.stderr)

        if (not args.noop):
            pathlib.Path(FileDir).mkdir(parents=True, exist_ok=True)

    FileFullPath='{}/{}'.format(FileDir, BaseFileName)

    if ((not os.path.isfile(FileFullPath)) or args.force):
        if (args.noop or args.verbose):
            print("download '{}' to '{}'".format(BaseFileName, FileFullPath))

        if (args.force or (not args.noop)):
            Acquisition.download_file(AcquisitionFileName, "{}".format(FileFullPath))


