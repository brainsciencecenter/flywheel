#!/usr/bin/env python3

import argparse
import flywheel
import fwgearutils
import json
import os
import re
import sys

def getContainer(args=None, id=None):
    try:
        if (args.device_get):
            Container = fw.get_device(id)
        elif (args.get_all_devices):
            Container = fw.get_all_devices()
        elif (args.get_all_gears):
            Container = fw.get_all_gears()
        elif (args.get_job):
            Container = fw.get_job(id)
        elif (args.get_user):
            if (len(args.id) > 0):
                Container = fw.get_user(id)
            else:
                Container = fw.get_all_users()
        elif (args.get_role):
            if (len(args.id) > 0):
                Container = fw.get_role(id)
            else:
                Container = fw.get_all_roles()
        else:
            Container = fw.get(id)

    except (OSError, Exception) as e:
        print("e",e, file=sys.stderr)
        sys.exit(1)
    
    return(Container)

if __name__ == '__main__':

    import argparse

    CmdName = os.path.basename(sys.argv[0])
    Outputs = []

    ap = argparse.ArgumentParser()
    ap.add_argument('-1', '--one-at-a-time', default=False,  action='store_true', help='Print info one at a time')
    ap.add_argument('-a', '--acquisitions', default=False,  action='store_true', help='include acquisitions')
    ap.add_argument('-D', '--debug', default=False,  action='store_true', help='debug')
    ap.add_argument('-d', '--device-get', default=False,  action='store_true', help='get device info')
    ap.add_argument('-g', '--get-all-gears', default=False,  action='store_true', help='get list of gears')
    ap.add_argument('-G', '--get', default=False,  action='store_true', help='get')
    ap.add_argument('-j', '--get-job', default=False,  action='store_true', help='get job by id')
    ap.add_argument('-l', '--localtime',  action='store_true', default=False, help='print times in local timezone instead of UTC')
    ap.add_argument('-r', '--get-role', default=False,  action='store_true', help='get role, or all roles if none specified')
    ap.add_argument('-R', '--recurse', default=False,  action='store_true', help='recurse')
    ap.add_argument('-S', '--get-all-devices', default=False,  action='store_true', help='get all scanner info')
    ap.add_argument('-u', '--get-user', default=False,  action='store_true', help='all user info')
    ap.add_argument('-v', '--verbose', default=False,  action='store_true', help='verbose')
    ap.add_argument('-z', '--zip-info', default=False,  action='store_true', help='zip-info')

    ap.add_argument('id', nargs='*', type=str, default=None, help='group/project|ProjectID|uuid')

    args = ap.parse_args()

    fw = fwgearutils.getFW(args, Root=True)
    if (not fw):
        print("%s : unable to initialize flywheel object" % (CmdName), file=sys.stderr)
        sys.exit(1)

    if (len(args.id) > 0):
        for id in args.id:
            Container = getContainer(args=args,id=id)

            if (args.recurse):
                Output = fwgearutils.recurse(fw,Container, CmdName=CmdName, Get=args.get, UTC=(not args.localtime), Debug=args.debug, Verbose=args.verbose, GetAcquisitions=args.acquisitions, ZipInfo=args.zip_info)
            else:
                Output = fwgearutils.sloppyCopy(Container, UTC=(not args.localtime))

            if (args.one_at_a_time):
                print(json.dumps(Output, indent=2))
            else:
                Outputs.append(Output)

    else:
        Container = getContainer(args=args)

        if (args.recurse):
            Outputs.append( fwgearutils.recurse(fw,Outputs, CmdName=CmdName, Get=args.get, UTC=(not args.localtime), Debug=args.debug, Verbose=args.verbose, GetAcquisitions=args.acquisitions, ZipInfo=args.zip_info) )
        else:
            Outputs.append( fwgearutils.sloppyCopy(s, UTC=(not args.localtime)))

    if (not (args.one_at_a_time)):
        print(json.dumps(Outputs, indent=2))
