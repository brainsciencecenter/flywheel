#!/bin/bash

CmdName=$(basename "$0")
Syntax="${CmdName} [-f][-m][-n][-v][-p][-t TmpDir] {Group/Project}"

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "$opt_n" ] || "$@"
}

while getopts fmnpt:v arg
do
	case "$arg" in
	     f|m|n|p|t|v)
		eval "opt_${arg}='${OPTARG:=1}'"
		;;
	esac
done
		
shift $(("${OPTIND}" - 1))

GroupProject="$1"

Group=$(echo "$GroupProject" | cut -f 1 -d /)
Project=$(echo "$GroupProject" | cut -f 2 -d /)
if (echo "$GroupProject" | grep -q /) && [ -n "$Group" ] && [ -n "$Project" ]
then
    true
else
	echo "${CmdName} : Missing or malformed Group/Project '$GroupProject'" 1>&2
	echo "${Syntax}" 1>&2
	exit 1
fi

DeleteTmpDir=False
if [ -n "$opt_t" ]
then
    TmpDir="$opt_t"
else
	TmpDir=$(mktemp -d "${TMPDIR:-/tmp}/FwId2LabelsDir-XXXXXXX")
	[ -z "$opt_m" ] && DeleteTmpDir=True
fi
[ -e "$TmpDir" ] || sys mkdir -p "$TmpDir"

[ -n "$opt_p" ] && ProgressBar=-p

Id2ProjectLabelsJson="${TmpDir}/Id2ProjectLabels.json"
if [ -n "$opt_f" -o ! -e "$Id2ProjectLabelsJson" ]
then
    sys fwlookup $ProgressBar "$Group" | jq -r '[ .[].projects[] | { (._id): .label } ] | add' > "$Id2ProjectLabelsJson"
fi

ProjectId=$(jq -r 'to_entries[] | select(.value == "'"$Project"'") | .key' "$Id2ProjectLabelsJson")

Id2SubjectLabelsJson="${TmpDir}/Id2SubjectLabels.json"
if [ -n "$opt_f" -o ! -e "$Id2SubjectLabelsJson" ]
then
    #fwsearch doesn't return the subject uid
    sys fwfind -s group="$Group" parents.project="${ProjectId}" | jq '[.[]| {(._id): .label}] | add ' > "$Id2SubjectLabelsJson"
fi

Id2SessionLabelsJson="${TmpDir}/Id2SessionLabels.json"
if [ -n "$opt_f" -o ! -e "$Id2SessionLabelsJson" ]
then
    #fwsearch doesn't return the session uid
    sys	fwfind -S group="$Group" parents.project="${ProjectId}" | jq '[.[]| {(._id): .label}] | add ' > "$Id2SessionLabelsJson"
fi

Id2SessionTimeStampsJson="${TmpDir}/Id2SessionTimeStamps.json"
if [ -n "$opt_f" -o ! -e "$Id2SessionTimeStampsJson" ]
then
    sys	fwfind -S group="$Group" parents.project="${ProjectId}" | jq '[.[]| {(._id): .timestamp}] | add ' > "$Id2SessionTimeStampsJson"
fi

Id2SessionNotesJson="${TmpDir}/Id2SessionNotes.json"
if [ -n "$opt_f" -o ! -e "$Id2SessionNotesJson" ]
then
    sys fwfind -1 -S "group=${Group}" "parents.project=${ProjectId}" 'notes.text>""' | jq -r '._id' | fwget -1 | jq  ' {"id": ._id, "notes": .notes[].text}'  | jq -s 'map({(.id): .notes}) | add' > "$Id2SessionNotesJson"
#    fwsearch -r session 'group._id = '"\"$Group\"" 'session.notes.text =~ ".+"' | jq -r '.[].session._id'  | fwget -1 | jq  ' {"id": ._id, "notes": .notes[].text}'  | jq -s 'map({(.id): .notes}) | add' > "$Id2SessionNotesJson"
fi

Id2SessionTagsJson="${TmpDir}/Id2SessionTags.json"
if [ -n "$opt_f" -o ! -e "$Id2SessionTagsJson" ]
then
    sys fwfind -g -S group="$Group" parents.project="${ProjectId}" | jq '[.[]| {(._id): (.tags|join(":"))}] | add ' > "$Id2SessionTagsJson"
fi

if [ -z "$opt_m" ] && [ "$DeleteTmpDir" == True ]
then
    sys rm -rf "$TmpDir"
else
    [ -n "${opt_v}${opt_n}" ] && echo "${CmdName} : Leaving Id2Label Json Files in '$TmpDir'" 1>&2
fi

