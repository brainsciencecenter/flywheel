#!/bin/bash

#
# *** want a way to filter out inactive projects
#

AdminRoleId=$(fwget -r | jq -r '.[][]|select(.label == "admin") | ._id')

if [ -n "$*" ]
then
	ProjectUuids="$@"
else
	ProjectUuids=$(fwGetAllProjects | jq -r '.[].project_uuid')
fi

echo "projectUuid,group,project,businessAdministratorName,businessAdministratorEmail,fundingSourceName,accountNumber,projectAdmins"
for uuid in $ProjectUuids
do
    json=$(fwget "$uuid" 2> /dev/null)
    if [ "$?" == 1 ]
    then
	json=$(fwlookup "$uuid" 2> /dev/null)
    fi
    
    if [ -n "$json" ] && $(echo "$json" | jq -r '.[].group' | grep -q -v null)
    then
	if [ -z "$GetUsage" ]
	then
	    echo "$json" | jq -r '.[] | [._id, .group, .label, (.info.ProjectFunding | (.businessAdministrator.name, .businessAdministrator.email, .fundingSourceName, .accountNumber)),  ([(.permissions[]|select(.role_ids[] | contains("'$AdminRoleId'"))._id)]|sort|join(" "))]|@csv '
	else
	    CSV=$(echo "$json" | jq -r '.[] | [._id, .group, .label, (.info.ProjectFunding | (.businessAdministrator.name, .businessAdministrator.email, .fundingSourceName, .accountNumber)),  ([(.permissions[]|select(.role_ids[] | contains("'$AdminRoleId'"))._id)]|sort|join(" "))]|@csv ' )
	    GroupProject=$(echo "$CSV" | csvcut -c 2,3)
	    Usage
    else
	echo "$uuid not found" 1>&2
    fi

done | sort -t , -k +2,3 

