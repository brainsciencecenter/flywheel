#!/usr/bin/python3

import argparse
import fwgearutils
import flywheel
import json
import os
import re
import sys

from operator import itemgetter, attrgetter, methodcaller

if __name__ == '__main__':

    CmdName = os.path.basename(sys.argv[0])

    ap = argparse.ArgumentParser()

    ap.add_argument('-f', '--force', action='store_true', help='overwrite existing deid profile already in projects')
    ap.add_argument('-n', '--noop', action='store_true', help='do not upload, only show what would be uploaded and to where')
    ap.add_argument('-p', '--deid-profile', type=str, help='file containing the de-id profile to upload')
    ap.add_argument('-r', '--root', default=True,  action='store_true', help='enable manager mode')
    ap.add_argument('-v', '--verbose',  action='store_true', help='print progress info')
    ap.add_argument('findargs', nargs='*', type=str, default=None, help='findargs')

    args = ap.parse_args()

    ProfileFile = args.deid_profile

    fw = fwgearutils.getFW(args,args.root)

    if (not fw):
        print("%s : unable to initialize flywheel object" % (CmdName), file=sys.stderr)
        sys.exit(1)


    if (len(args.findargs) > 0):
        projects = fw.projects.find(*args.findargs)
    else:
        projects = fw.get_all_projects(exhaustive=True)

    for project in sorted(projects, key=lambda p: "{}/{}".format(p.group, p.label)):
        project=project.reload()
        if (args.force or (not project.get_file(ProfileFile))):
            if (args.noop or args.verbose):
                print("{} uploading {} to {}/{}".format(CmdName,ProfileFile,project.group,project.label), file=sys.stderr)
            if (not args.noop):
                project.upload_file(ProfileFile)
        else:
            print("{}: {} already in {}/{} and no -f".format(CmdName, ProfileFile, project.group, project.label))

