#!/bin/bash

. v${Version:=5}ArgHandler

if [ -n "$opt_f" ]
then
    bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '
    DROP TABLE IF EXISTS
        `'"${Project}.${Dataset}"'.v5EstTotalStaticGearOverheadMetrics`
    ;
    '
fi

bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '

'"$(< v5TempFunctions)"'

CREATE TABLE IF NOT EXISTS
        `'"${Project}.${Dataset}"'.v5EstTotalStaticGearOverheadMetrics`
    (
         InvoiceMonth				STRING

       , TotalOverheadComputeCosts		FLOAT64
       , TotalOverheadComputeCpuHours		FLOAT64
       , TotalOverheadComputeDynamicCpuHours	FLOAT64
       , TotalOverheadComputeDynamicCosts	FLOAT64

       , TotalOverheadComputeStaticCpuHours	FLOAT64
       , TotalOverheadComputeStaticCosts	FLOAT64

       , TotalOverheadComputeLabeledCosts	FLOAT64
       , TotalOverheadComputeUnLabeledCosts	FLOAT64

       , TotalOverheadStorageStandardCosts	FLOAT64
       , TotalOverheadStorageStandardGb		FLOAT64
       , TotalOverheadStorageColdlineCosts	FLOAT64
       , TotalOverheadStorageColdlineGb		FLOAT64
       , TotalOverheadStorageArchiveCosts	FLOAT64
       , TotalOverheadStorageArchiveGb		FLOAT64

       , TotalOverheadStorageMiscCosts		FLOAT64

       , TotalOverheadMiscCosts			FLOAT64

       , TotalOverheadMiscStaticCosts		FLOAT64
       , TotalOverheadMiscDynamicCosts		FLOAT64
       , TotalOverheadMiscLabeledCosts		FLOAT64
       , TotalOverheadMiscUnlabeledCosts	FLOAT64

       , TotalOverheadCosts			FLOAT64

       , TotalEstGcpStaticGearCpuHours		FLOAT64
       , TotalEstGcpStaticGearCosts		FLOAT64

       , TotalEstGcpOverheadCpuHours		FLOAT64
       , TotalEstGcpOverheadCosts		FLOAT64
    );

DELETE FROM 
        `'"${Project}.${Dataset}"'.v5EstTotalStaticGearOverheadMetrics`
    WHERE
        InvoiceMonth = @InvoiceMonth
    ;

INSERT
    `'"${Project}.${Dataset}"'.v5EstTotalStaticGearOverheadMetrics`
    SELECT
         t1.InvoiceMonth

       , TotalOverheadComputeCosts
       , TotalOverheadComputeCpuHours
       , TotalOverheadComputeDynamicCpuHours
       , TotalOverheadComputeDynamicCosts

       , TotalOverheadComputeStaticCpuHours
       , TotalOverheadComputeStaticCosts

       , TotalOverheadComputeLabeledCosts
       , TotalOverheadComputeUnLabeledCosts

       , TotalOverheadStorageStandardCosts
       , TotalOverheadStorageStandardGb
       , TotalOverheadStorageColdlineCosts
       , TotalOverheadStorageColdlineGb
       , TotalOverheadStorageArchiveCosts
       , TotalOverheadStorageArchiveGb

       , TotalOverheadStorageMiscCosts

       , TotalOverheadMiscCosts

       , TotalOverheadMiscStaticCosts
       , TotalOverheadMiscDynamicCosts
       , TotalOverheadMiscLabeledCosts
       , TotalOverheadMiscUnlabeledCosts

       , TotalOverheadCosts

       , TotalEstGcpStaticGearCpuHours
       , TotalEstGcpStaticGearCosts

       , TotalEstGcpOverheadCpuHours
       , TotalEstGcpOverheadCosts

    FROM (
        SELECT 
                InvoiceMonth
    
              , SUM(AllocatedGcpGearComputeCosts) AS TotalOverheadComputeCosts
              , SUM(AllocatedGcpGearComputeCpuHours) AS TotalOverheadComputeCpuHours
              , SUM(AllocatedGcpGearComputeDynamicCpuHours) AS TotalOverheadComputeDynamicCpuHours
              , SUM(AllocatedGcpGearComputeDynamicCosts) AS TotalOverheadComputeDynamicCosts
            
              , SUM(AllocatedGcpGearComputeStaticCpuHours) AS TotalOverheadComputeStaticCpuHours
              , SUM(AllocatedGcpGearComputeStaticCosts) AS TotalOverheadComputeStaticCosts
            
              , SUM(AllocatedGcpGearComputeLabeledCosts) AS TotalOverheadComputeLabeledCosts
              , SUM(AllocatedGcpGearComputeUnLabeledCosts) AS TotalOverheadComputeUnLabeledCosts

              , SUM(AllocatedGcpGearStorageStandardCosts) AS TotalOverheadStorageStandardCosts
              , SUM(AllocatedGcpGearStorageStandardGb) AS TotalOverheadStorageStandardGb
              , SUM(AllocatedGcpGearStorageColdlineCosts) AS TotalOverheadStorageColdlineCosts
              , SUM(AllocatedGcpGearStorageColdlineGb) AS TotalOverheadStorageColdlineGb
              , SUM(AllocatedGcpGearStorageArchiveCosts) AS TotalOverheadStorageArchiveCosts
              , SUM(AllocatedGcpGearStorageArchiveGb) AS TotalOverheadStorageArchiveGb
           
              , SUM(AllocatedGcpGearStorageMiscCosts) AS TotalOverheadStorageMiscCosts

              , SUM(AllocatedGcpGearMiscCosts) AS TotalOverheadMiscCosts

	      , SUM(AllocatedGcpGearMiscStaticCosts) AS TotalOverheadMiscStaticCosts
       	      , SUM(AllocatedGcpGearMiscDynamicCosts) AS TotalOverheadMiscDynamicCosts
       	      , SUM(AllocatedGcpGearMiscLabeledCosts) AS TotalOverheadMiscLabeledCosts
       	      , SUM(AllocatedGcpGearMiscUnlabeledCosts) AS TotalOverheadMiscUnlabeledCosts

              , SUM(AllocatedGcpGearCosts) AS TotalOverheadCosts
            
          FROM
              `'"${Project}.${Dataset}"'.v5AllocatedGcpFwGroupProjectGears`
          WHERE
                 InvoiceMonth = @InvoiceMonth
    	     AND ( FwGroup IS NULL OR FwGroup = "flywheel-static" )
          GROUP BY
    	     InvoiceMonth
     ) t1
     LEFT JOIN (
        SELECT
	      InvoiceMonth
	    , TotalEstGcpStaticGearCpuHours
            , GcpTotalComputeStaticCosts * (TotalEstGcpStaticGearCpuHours / GcpTotalComputeStaticCpuHours) AS TotalEstGcpStaticGearCosts

	    , (GcpTotalComputeStaticCpuHours - TotalEstGcpStaticGearCpuHours) AS TotalEstGcpOverheadCpuHours
	    , GcpTotalComputeStaticCosts * (GcpTotalComputeStaticCpuHours - TotalEstGcpStaticGearCpuHours) / GcpTotalComputeStaticCpuHours AS TotalEstGcpOverheadCosts
        FROM (
           SELECT
	         InvoiceMonth
	       , FwTotalDynamicCpuHours
	       , GcpTotalComputeDynamicCpuHours
	       , GcpTotalComputeStaticCosts
	       , GcpTotalComputeStaticCpuHours
               , FwTotalStaticCpuHours * prorate(GcpTotalComputeDynamicCpuHours, FwTotalDynamicCpuHours) AS TotalEstGcpStaticGearCpuHours
	   FROM
               `'"${Project}.${Dataset}"'.v5GcpFwTotalComputeStorageMetrics`
           WHERE
               InvoiceMonth = @InvoiceMonth

        )
    ) t2
    ON
	    t1.InvoiceMonth = t2.InvoiceMonth
    ;

' | OutputControl $opt_v

bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '


SELECT 
          InvoiceMonth
	  
  , ROUND(TotalOverheadComputeCosts,2) AS TotalOverheadComputeCosts
  , ROUND(TotalOverheadComputeCpuHours,2) AS TotalOverheadComputeCpuHours
  , ROUND(TotalOverheadComputeDynamicCpuHours,2) AS TotalOverheadComputeDynamicCpuHours
  , ROUND(TotalOverheadComputeDynamicCosts,2) AS TotalOverheadComputeDynamicCosts

  , ROUND(TotalOverheadComputeStaticCpuHours,2) AS TotalOverheadComputeStaticCpuHours
  , ROUND(TotalOverheadComputeStaticCosts,2) AS TotalOverheadComputeStaticCosts

  , ROUND(TotalOverheadComputeLabeledCosts,2) AS TotalOverheadComputeLabeledCosts
  , ROUND(TotalOverheadComputeUnLabeledCosts,2) AS TotalOverheadComputeUnLabeledCosts

  , ROUND(TotalOverheadStorageStandardCosts,2) AS TotalOverheadStorageStandardCosts
  , ROUND(TotalOverheadStorageStandardGb,2) AS TotalOverheadStorageStandardGb
  , ROUND(TotalOverheadStorageColdlineCosts,2) AS TotalOverheadStorageColdlineCosts
  , ROUND(TotalOverheadStorageColdlineGb,2) AS TotalOverheadStorageColdlineGb
  , ROUND(TotalOverheadStorageArchiveCosts,2) AS TotalOverheadStorageArchiveCosts
  , ROUND(TotalOverheadStorageArchiveGb,2) AS TotalOverheadStorageArchiveGb

  , ROUND(TotalOverheadStorageMiscCosts,2) AS TotalOverheadStorageMiscCosts

  , ROUND(TotalOverheadMiscCosts,2) AS TotalOverheadMiscCosts

  , ROUND(TotalOverheadMiscStaticCosts, 2) AS TotalOverheadMiscStaticCosts
       , ROUND(TotalOverheadMiscDynamicCosts, 2) AS TotalOverheadMiscDynamicCosts
       , ROUND(TotalOverheadMiscLabeledCosts, 2) AS TotalOverheadMiscLabeledCosts
       , ROUND(TotalOverheadMiscUnlabeledCosts, 2) AS TotalOverheadMiscUnlabeledCosts

       , ROUND(TotalOverheadCosts, 2) AS TotalOverheadCosts

  , ROUND(TotalEstGcpStaticGearCpuHours, 2) AS TotalEstGcpStaticGearCpuHours
  , ROUND(TotalEstGcpStaticGearCosts, 2) AS TotalEstGcpStaticGearCost

	, ROUND(TotalEstGcpOverheadCpuHours, 2) AS TotalEstGcpOverheadCpuHours
	, ROUND(TotalEstGcpOverheadCosts, 2) AS TotalEstGcpOverheadCost

  FROM
             `'"${Project}.${Dataset}"'.v5EstTotalStaticGearOverheadMetrics` 

  ;


' | OutputControl column
