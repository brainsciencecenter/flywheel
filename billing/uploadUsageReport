#!/bin/bash

CmdName=$(basename "$0")

syntax="${CmdName} [-d Dataset][-m Month][-k][-p Project][-v][-y Year] [ReportFile]"

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -n "${opt_n}" ] || "$@"
}

while getopts d:km:np:vy: arg
do
	case "$arg" in 
		d|k|m|n|p|v|y)
			eval "opt_${arg}=${OPTARG:=1}"
			;;
	esac
done

shift $(($OPTIND - 1))

Dataset=BillingAllocation
[ -n "$opt_d" ] && Dataset="$opt_d"

Project=pennbrain-center
[ -n "$opt_p" ] && Project="$opt_p"

nowmonth=$(date +%Y-%m-15)
Year=$(date --date="$nowmonth -1 month" +'%Y')
[ -n "$opt_y" ] && Year="$opt_y"

Month=$(date --date="$nowmonth -1 month" +'%m')
[ -n "$opt_m" ] && Month="$opt_m"

NextYearMonth=$(date --date="${Year}-${Month}-15 next month" +%Y-%m)


case "$CmdName" in
	uploadJobsReport)
	    DB="${Dataset}.FwJobsReport"
	    Cast='CAST(invoice_month AS STRING)'
	    ;;

	uploadUsageReport)
	    DB="${Dataset}.FwUsageReport"
	    Cast='CAST(invoice_month AS STRING)'
	    ;;

	uploadSessionReport)
	    DB="${Dataset}.FwSessionReport"
	    Cast='FORMAT_DATE("%Y%m", Date)'
	    ;;

	uploadCostTableReport)
	    DB="${Dataset}.CostTable"
	    Cast='CAST(invoice_month AS STRING)'
	    ;;

	*)
	    echo "Unknown command name" 1>&2
	    exit 1
	    ;;
esac

if [ -n "$1" ] || [ -n "$opt_k" ]
then
    ReportFile="$1"
else
    ReportFile=$(mktemp /tmp/uploadReport-XXXXX)
    Cleanup=1
fi

if [ -n "$opt_k" ] && [ ! -e "$ReportFile" ]
then
    if [ "$CmdName" == "uploadJobsReport" ]
    then
	sys getJobs -aei -p "created>${Year}-${Month}-01" "created<${NextYearMonth}-01" > "$ReportFile"
	if [ "$?" != 0 ] || [ $(wc -l "$ReportFile") -le 1 ]
	then
	    echo "${CmdName} : getJobs Failed" 1>&2
	    exit 3
	fi
    fi

    if [ "$CmdName" == "uploadUsageReport" ]
    then
	sys getFwUsageReport -m "$Month" -y "$Year" "$ReportFile"
	if [ "$?" != 0 ] || [ $(wc -l "$ReportFile") -le 1 ]
	then
	    echo "${CmdName} : getFwUsageReport Failed" 1>&2
	    exit 4
	fi
    fi

    if [ "$CmdName" == "uploadSessionReport" ]
    then
	sys genSessionCSV -p "created>${Year}-${Month}-01" "created<${NextYearMonth}-01" > "$ReportFile"
	if [ "$?" != 0 ] || [ $(wc -l "$ReportFile") -le 1 ]
	then
	    echo "${CmdName} : genSessionCSV Failed" 1>&2
	    exit 5
	fi
    fi

    if [ "$CmdName" == "uploadCostTableReport" ]
    then
	echo "$CmdName : no known way to download the CostTable from GCP Billing" 1>&2
	exit 2
    fi
fi


if isTable -q -d "$Dataset" -p "$Project" -t $(echo "$DB" | cut -d . -f 2)
then
    bq query -q --use_legacy_sql=false 'DELETE FROM `'"${DB}"'` WHERE '"$Cast"' = "'"${Year}${Month}"'"'

    bq load --project_id="${Project}" --skip_leading_rows 1 --noreplace --source_format=CSV "$DB" "$ReportFile"
else
    bq load --project_id="${Project}" --autodetect --source_format=CSV "$DB" "$ReportFile"
fi

if [ -n "$Cleanup" ]
then
	rm -f "$ReportFile"
fi

