#!/bin/bash

BillingTable="unipen-015ee8-997645-50785f.billing_export.gcp_billing_export_v1_015EE8_997645_50785F"

while getopts d:m:p:y: arg
do
	case "$arg" in
		d|m|p|y)
			eval "opt_${arg}=${OPTARG:=1}"
			;;
	esac
done

shift $(($OPTIND - 1))

nowmonth=$(date +%Y-%m-15)
Year=$(date --date="$nowmonth -1 month" +'%Y')
[ -n "$opt_y" ] && Year="$opt_y"

Month=$(date --date="$nowmonth -1 month" +'%m')
[ -n "$opt_m" ] && Month="$opt_m"


#
# Standard storage Usage, Cost
# Storage Cost
# Cold Storage Usage/Cost
# Compute CPU Usage (hour)
# Compute Costs
# VMCompute Costs
# Static VM Compute Costs
# Misc Costs
# Initial Analysis Count
# Total Costs


bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter=InvoiceMonth:STRING:"${opt_y}${opt_m}" --parameter=FlywheelProject:STRING:upenn-flywheel  '
  SELECT
    invoice.month as InvoiceMonth,
    project, 
    service.description as ServiceDescription,
    sum(usage.amount_in_pricing_units) as UsageAmountInPricingUnits,
    SUM(cost) AS Costs,
    SUM(IFNULL((
        SELECT
          SUM(c.amount)
        FROM
          UNNEST(credits) c
        WHERE
          c.type != "PROMOTION" ),
        0)) AS Discounts,
    SUM(IFNULL((
        SELECT
          SUM(c.amount)
        FROM
          UNNEST(credits) c
        WHERE
          c.type = "PROMOTION" ),
        0)) AS Promotions
  FROM
    `unipen-015ee8-997645-50785f.billing_export.gcp_billing_export_v1_015EE8_997645_50785F`
  LEFT JOIN
    UNNEST(labels) AS labels
  ON
    labels.key = "billing"
  WHERE
        invoice.month = @InvoiceMonth
    AND 
        project.name = @FlywheelProject
    GROUP BY
        InvoiceMonth
#       ServiceDescription

'
