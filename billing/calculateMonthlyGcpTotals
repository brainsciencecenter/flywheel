#!/bin/bash

CmdName=$(basename "$0")

syntax="${CmdName} [-d Dataset][-p Project] {-m Month} {-y Year}"

while getopts d:m:p:y: arg
do
	case "$arg" in 
		d|m|p|y)
			eval "opt_${arg}=${OPTARG:=1}"
			;;
	esac
done

shift $(($OPTIND - 1))

if [ -z "$opt_y" ] || [ -z "$opt_m" ]
then
	echo "$syntax" 1>&2
	exit 1
fi

nowmonth=$(date +%Y-%m-15)
Year=$(date --date="$nowmonth -1 month" +'%Y')
[ -n "$opt_y" ] && Year="$opt_y"

Month=$(date --date="$nowmonth -1 month" +'%m')
[ -n "$opt_m" ] && Month="$opt_m"

Dataset=BillingAllocation
[ -n "$opt_d" ] && Dataset="$opt_d"

Project=pennbrain-center
[ -n "$opt_p" ] && Project="$opt_p"


BscGcpProjectCostAllocationsFile=$(mktemp /tmp/BscGcpProjectCostAllocations-XXXXXX)
(wget -q -O - https://docs.google.com/spreadsheets/d/e/2PACX-1vQo4_xTQmetGhNCH_sEo_B1KI7glRgRqizq1LthUo36g3tIZ9iO5-Ll07qk6-NFw1FjLQQ5yDkmtp1S/pub?output=csv ; echo "") > "$BscGcpProjectCostAllocationsFile"

DB="${Dataset}.BscGcpProjectCostAllocations"

ServiceId=455000
BscStorageFeePercent=0.25
#curl -q -H "Authorization: Bearer $token"  "https://api.ilabsolutions.com/v1/cores/4822/services" | jq -r '.ilab_response.services[]|[.id,.name]|@csv'

bq load --autodetect --project_id="${Project}" --skip_leading_rows 1 --replace --source_format=CSV "$DB" "$BscGcpProjectCostAllocationsFile"

bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '

SELECT 
    "'"$ServiceId"'" AS service_id,
    format("%s (%8.2f + (%8.2f * %0.2f = %8.2f)) * %0.2f = %8.2f",
         GcpProjectName,
	 TotalDiscountedCosts,
	 TotalDiscountedStorageCosts,
	 '"$BscStorageFeePercent"',
	 BscGcpStorageFee,
	 AllocationPercent,
	 TotalAllocatedCharges
      )
      AS note,
    format("%8.2f", ROUND(TotalAllocatedCharges,2)) AS service_quantity,
    "" AS price,
    "" AS purchased_on,
    iLabServiceRequestNumber AS service_request_id,
    "" AS owner_email,
    "" AS pi_email_or_group_id,
    "" AS payment_number
FROM (
     SELECT
	*
     FROM (
	SELECT
	        AllocationPercent,
	        GcpProjectName,
	        TotalDiscountedCosts,
	        TotalDiscountedStorageCosts,
	        ROUND((TotalDiscountedStorageCosts * '"$BscStorageFeePercent"'),2) AS BscGcpStorageFee,
	        ROUND(TotalDiscountedStorageCosts + (TotalDiscountedStorageCosts * 0.25),2) AS TotalCharges,
	        ROUND((TotalDiscountedCosts + (TotalDiscountedStorageCosts * 0.25)) * AllocationPercent,2) AS TotalAllocatedCharges,
		IlabServiceRequestNumber,
		FundNumber,
	FROM (
	    SELECT 
	        BscGcpProjectCosts.InvoiceMonth AS InvoiceMonth,
	        BscGcpProjectCosts.GcpProjectName AS GcpProjectName,
	        ROUND(SUM(DiscountedCosts),2) AS TotalDiscountedCosts,
	        ROUND(SUM(DiscountedStorageCosts),2) AS TotalDiscountedStorageCosts,
	        BscGcpProjectCostAllocations.AllocationPercent AS AllocationPercent,
	        BscGcpProjectCostAllocations.iLabServiceRequestNumber AS IlabServiceRequestNumber,
	        BscGcpProjectCostAllocations.FundNumber AS FundNumber
	    FROM (
	        SELECT 
	            InvoiceMonth,
	            GcpProjectName,
	            ServiceDescription,
	            Costs + Discounts AS DiscountedCosts,
	            IF ((ServiceDescription = "Cloud Storage"), (Costs + Discounts), 0.0) AS DiscountedStorageCosts,
	        FROM `pennbrain-center.BillingAllocation.GcpNonFlywheelCosts` 
	        WHERE 
	            InvoiceMonth = @InvoiceMonth
	    ) BscGcpProjectCosts
	    FULL OUTER JOIN 
	    	`pennbrain-center.BillingAllocation.BscGcpProjectCostAllocations` BscGcpProjectCostAllocations
	    ON
		BscGcpProjectCosts.GcpProjectName = BscGcpProjectCostAllocations.GcpProjectName
	    GROUP BY 
	        BscGcpProjectCosts.InvoiceMonth,
	        BscGcpProjectCosts.GcpProjectName,
	    	BscGcpProjectCostAllocations.AllocationPercent,
		BscGcpProjectCostAllocations.FundNumber,
		IlabServiceRequestNumber
	    ORDER BY 
	        BscGcpProjectCosts.GcpProjectName ASC
	)
     )
     WHERE
	  ROUND(TotalAllocatedCharges,2) >= 0.01
	AND
	  FundNumber != "InternalBenNumber"
)	
'
