DROP TABLE IF EXISTS
    `'"${Project}.${Dataset}"'.v5GcpFwStaticGearOverheadMetrics`
    ;

CREATE TABLE IF NOT EXISTS
        `'"${Project}.${Dataset}"'.v5GcpFwStaticGearOverheadMetrics`
    (
         InvoiceMonth				STRING

       , FwGroup				STRING
    
       , FwProject				STRING
       , FwGearName				STRING
       , FwGearCategory				STRING


       , AllocatedGearComputeCosts		FLOAT64
       , AllocatedGearComputeCpuHours		FLOAT64

       , AllocatedGearComputeDynamicCpuHours	FLOAT64
       , AllocatedGearComputeDynamicCosts	FLOAT64

       , AllocatedGearComputeStaticCpuHours	FLOAT64
       , AllocatedGearComputeStaticCosts	FLOAT64

       , AllocatedGearComputeLabeledCosts	FLOAT64
       , AllocatedGearComputeUnLabeledCosts	FLOAT64

       , AllocatedGcpStorageCosts		FLOAT64
       , AllocatedGcpStorageStandardCosts	FLOAT64
       , AllocatedGcpStorageStandardGb		FLOAT64
       , AllocatedGcpStorageColdlineCosts	FLOAT64

       , AllocatedGcpStorageColdlineGb		FLOAT64
       , AllocatedGcpStorageArchiveCosts	FLOAT64
       , AllocatedGcpStorageArchiveGb		FLOAT64

       , AllocatedGcpMiscCosts			FLOAT64
    );

DELETE FROM 
    `'"${Project}.${Dataset}"'.v5GcpFwStaticGearOverheadMetrics`
WHERE
    InvoiceMonth = @InvoiceMonth
    ;

INSERT
    `'"${Project}.${Dataset}"'.v5GcpFwStaticGearOverheadMetrics`
    (

	SELECT
              t1.InvoiceMonth
            , t1.FwGroup
    
	    , IF (FwProject IS NULL, "BogusGearProject", FwProject) AS FwProject
	    , IF (FwGearName IS NULL, "BogusGearName", FwGearName) AS FwGearName
	    , IF (FwGearCategory IS NULL, "BogusGearCategory", FwGearCategory) AS FwGearCategory

            , AllocateGcpMetrics(t2.AllocatedGearComputeCosts,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeCosts
            , AllocateGcpMetrics(t2.AllocatedGearComputeCpuHours,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeCpuHours

            , AllocateGcpMetrics(t2.AllocatedGearComputeDynamicCpuHours,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeDynamicCpuHours
            , AllocateGcpMetrics(t2.AllocatedGearComputeDynamicCosts,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeDynamicCosts

            , AllocateGcpMetrics(t2.AllocatedGearComputeStaticCpuHours,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeStaticCpuHours
            , AllocateGcpMetrics(t2.AllocatedGearComputeStaticCosts,FwGearStaticCpuHours,TotalFwGearStaticCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeStaticCosts

            , AllocateGcpMetrics(t2.AllocatedGearComputeLabeledCosts,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeLabeledCosts
            , AllocateGcpMetrics(t2.AllocatedGearComputeUnLabeledCosts,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGearComputeUnLabeledCosts

            , AllocateGcpMetrics(t2.AllocatedGcpStorageCosts,FwProjectStorageActiveGb,TotalFwProjectStorageActiveGb, FwGearGroupTotalProjectCount) AS AllocatedGcpStorageCosts

            , AllocateGcpMetrics(t2.AllocatedGcpStorageStandardCosts,FwProjectStorageActiveGb,TotalFwProjectStorageActiveGb, FwGearGroupTotalProjectCount) AS AllocatedGcpStorageStandardCosts
            , AllocateGcpMetrics(t2.AllocatedGcpStorageStandardGb,FwProjectStorageActiveGb,TotalFwProjectStorageActiveGb, FwGearGroupTotalProjectCount) AS AllocatedGcpStorageStandardGb

            , AllocateGcpMetrics(t2.AllocatedGcpStorageColdlineGb,FwProjectStorageActiveGb,TotalFwProjectStorageActiveGb, FwGearGroupTotalProjectCount) AS AllocatedGcpStorageColdlineCosts
            , AllocateGcpMetrics(t2.AllocatedGcpStorageColdlineCosts,FwProjectStorageActiveGb,TotalFwProjectStorageActiveGb, FwGearGroupTotalProjectCount) AS AllocatedGcpStorageColdlineGb

            , AllocateGcpMetrics(t2.AllocatedGcpStorageArchiveCosts,FwProjectStorageActiveGb,TotalFwProjectStorageActiveGb, FwGearGroupTotalProjectCount) AS AllocatedGcpStorageArchiveCosts
            , AllocateGcpMetrics(t2.AllocatedGcpStorageArchiveGb,FwProjectStorageActiveGb,TotalFwProjectStorageActiveGb, FwGearGroupTotalProjectCount) AS AllocatedGcpStorageArchiveGb

            , AllocateGcpMetrics(t2.AllocatedGcpMiscCosts,FwGearDynamicCpuHours,TotalFwGearDynamicCpuHours, FwGearGroupTotalProjectCount) AS AllocatedGcpMiscCosts

	FROM
            `'"${Project}.${Dataset}"'.v5AllocatedGcpFwGroupProjectGearsV4_5` t1
        LEFT JOIN (
            SELECT
		*
            FROM
               `'"${Project}.${Dataset}"'.TempTotalOverheadMetricsV4_5`
            WHERE
                InvoiceMonth = @InvoiceMonth

        ) t2
	ON
	        t1.InvoiceMonth = t2.InvoiceMonth
        WHERE
               t1.InvoiceMonth = @InvoiceMonth
	   AND t1.FwGroup IS NOT NULL
	   AND t1.FwGroup != "flywheel-static"
	ORDER BY
	    t1.InvoiceMonth
            , t1.FwGroup
     ) ORDER BY InvoiceMonth, FwGroup, FwProject, FwGearName

     ;

SELECT 
  ROUND(SUM(AllocatedGearComputeCosts),2) AS AllocatedGearComputeCosts
  , ROUND(SUM(AllocatedGearComputeCpuHours),2) AS AllocatedGearComputeCpuHours
  , ROUND(SUM(AllocatedGearComputeDynamicCpuHours),2) AS AllocatedGearComputeDynamicCpuHours
  , ROUND(SUM(AllocatedGearComputeDynamicCosts),2) AS AllocatedGearComputeDynamicCosts

  , ROUND(SUM(AllocatedGearComputeStaticCpuHours),2) AS AllocatedGearComputeStaticCpuHours
  , ROUND(SUM(AllocatedGearComputeStaticCosts),2) AS AllocatedGearComputeStaticCosts

  , ROUND(SUM(AllocatedGearComputeLabeledCosts),2) AS AllocatedGearComputeLabeledCosts
  , ROUND(SUM(AllocatedGearComputeUnLabeledCosts),2) AS AllocatedGearComputeUnLabeledCosts
  , ROUND(SUM(AllocatedGcpStorageCosts),2) AS AllocatedGcpStorageCosts
  , ROUND(SUM(AllocatedGcpStorageStandardCosts),2) AS AllocatedGcpStorageStandardCosts
  , ROUND(SUM(AllocatedGcpStorageStandardGb),2) AS AllocatedGcpStorageStandardGb
  , ROUND(SUM(AllocatedGcpStorageColdlineCosts),2) AS AllocatedGcpStorageColdlineCosts
  , ROUND(SUM(AllocatedGcpStorageColdlineGb),2) AS AllocatedGcpStorageColdlineGb
  , ROUND(SUM(AllocatedGcpStorageArchiveCosts),2) AS AllocatedGcpStorageArchiveCosts
  , ROUND(SUM(AllocatedGcpStorageArchiveGb),2) AS AllocatedGcpStorageArchiveGb

  , ROUND(SUM(AllocatedGcpMiscCosts),2) AS AllocatedGcpMiscCosts

         FROM
             `'"${Project}.${Dataset}"'.v5GcpFwStaticGearOverheadMetrics` 
;
