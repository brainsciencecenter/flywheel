#!/bin/bash

v5TempFunctions=$(which v5TempFunctions)

function sys {
    [ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2
    [ -z "$opt_n" ] && "$@"
}

function v5DownloadFwIlabCharges {
    local Database=v5BscFwCharges
    local ServiceId=472933


    bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '
    '"$(< ${v5TempFunctions})"'


    #
    # The TempProjectInfo has the current service request numbers from all the flywheel projects
    # Do an inner join to grab all the charges that match the group/projects and format into 
    # ilab compatiable csv file.
    #
    # *** service id should come from a config file
    #
    SELECT 
        "'"$ServiceId"'" AS service_id,
        note,
        format("%8.2f",round(ProjectTotalCharges,2)) AS service_quantity,
        "" AS price,
        format("%s01", InvoiceMonth) AS purchased_on,
        iLabServiceRequestNumber as service_request_id,
        "" AS owner_email,
        "" AS pi_email_or_group_id,
        "" AS payment_number
    FROM (
        SELECT 
	    *
	FROM (
	    SELECT
                 REPLACE(`Group`,"_","-") AS FwGroup
	        , Project AS FwProject
	        , iLabServiceRequestNumber
	    FROM
	     `'"${Project}.${Dataset}.TempProjectInfo"'` 
        ) ProjectInfo
        INNER JOIN (
    
            SELECT 
                  InvoiceMonth
                , FwGroup
                , FwProject
                , format("%s/%s Analysis Gears %.2f Storage Charge %.2f Storage Usage(Gb) %.2f Bsc Storage %.2f Bsc Initial Analysis %.2f Bsc Project %.2f"
                        , FwGroup 
                        , IF (FwProject is NULL, "Deleted", FwProject)
                        , ProjectComputeCosts
                        , ProjectStorageCosts
                        , ProjectStorageUsage
                        , BscStorageCharge
                        , BscInitialAnalysisCharge
                        , BscProjectCharges
                    ) AS `note`
                , FwInitialAnalysisCount
                , ProjectComputeCosts
                , ProjectStorageCosts
                , ProjectStorageUsage
                , BscStorageCharge
                , BscProjectCharges
                , ProjectTotalCharges
    
             FROM (
	     SELECT
		  InvoiceMonth
		, FwGroup
		, FwProject
                , SUM(FwInitialAnalysisCount) AS FwInitialAnalysisCount
                , SUM(myZeroIfNull(ProjectComputeCosts)) AS ProjectComputeCosts
                , SUM(ProjectStorageCosts) AS ProjectStorageCosts
                , SUM(ProjectStorageUsage) AS ProjectStorageUsage
		, SUM(BscInitialAnalysisCharge) AS BscInitialAnalysisCharge
                , SUM(BscProjectStorageCharge) AS BscStorageCharge
                , SUM(BscProjectCharge) AS BscProjectCharges
                , SUM(ProjectBscGcpCosts) AS ProjectTotalCharges
              FROM `'"${Project}.${Dataset}.${Database}"'` 
              WHERE InvoiceMonth = "'"${Year}${Month}"'" 
	      GROUP BY
	          InvoiceMonth
		, FwGroup
		, FwProject
	      ORDER BY
	          InvoiceMonth
		, FwGroup
		, FwProject

	   )
        ) ProjectCosts
        ON 
                ProjectInfo.FwGroup = ProjectCosts.FwGroup
            AND
                ProjectInfo.FwProject = ProjectCosts.FwProject 
        WHERE 
                REGEXP_CONTAINS(iLabServiceRequestNumber,"^([0-9]+)$")
                AND round(ProjectTotalCharges,2) >= 0.01
    )
    ORDER BY service_quantity desc
    '
}

function downloadFwIlabCharges {
    local Database=v5BscFwCharges
    local ServiceId=472933

    bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '
    
    #
    # The TempProjectInfo has the current service request numbers from all the flywheel projects
    # Do an inner join to grab all the charges that match the group/projects and format into 
    # ilab compatiable csv file.
    #
    # *** service id should come from a config file
    #
    SELECT 
        "'"${ServiceId}"'" AS service_id,
        note,
        FORMAT("%8.2f",round(TotalProjectCharges,2)) AS service_quantity,
        "" AS price,
        FORMAT("%s01", InvoiceMonth) AS purchased_on,
        iLabServiceRequestNumber as service_request_id,
        "" AS owner_email,
        "" AS pi_email_or_group_id,
        "" AS payment_number
    FROM (
        SELECT * from `'"${Project}.${Dataset}.TempProjectInfo"'` ProjectInfo
    
        INNER JOIN (
    
            SELECT 
                InvoiceMonth,
                `Group` AS `Group`,
                project AS project,
                format("%s/%s Analysis Gears %.2f Storage Charge %.2f Storage Usage(Gb) %.2f Bsc Storage %.2f Bsc Initial Analysis %.2f Bsc Project %.2f",
                        `Group`,
                        if (project is NULL, "Deleted", project),
                        ProjectVMDynamicCosts,
                        ProjectStorageCosts,
                        ProjectGcpStorageStandardUsage,
                        BscProjectStorageCharge,
                        BscInitialAnalysisCharge,
                        BscProjectCharge
                    ) AS `note`,
    
                InitialAnalysisCount,
                ProjectVMCosts,
                ProjectVMDynamicCosts,
                ProjectStorageCosts,
                ProjectGcpStorageStandardUsage,
                BscProjectStorageCharge,
                BscProjectCharge,
                (ProjectBscCharges+ProjectGcpCosts) AS TotalProjectCharges
              FROM
	          `'"${Project}.${Dataset}.${Database}"'` 
              WHERE
	          InvoiceMonth = "'"${Year}${Month}"'" 
        ) ProjectCosts
        ON 
                ProjectInfo.FwGroup = ProjectCosts.FwGroup
            AND
                ProjectInfo.project = ProjectCosts.project 
        WHERE 
                REGEXP_CONTAINS(iLabServiceRequestNumber,"^([0-9]+)$")
                AND round(TotalProjectCharges,2) >= 0.01
    )
    ORDER BY
        service_quantity desc
    '
}

function downloadFwIlabChargesV4 {
    bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '
    
    #
    # The TempProjectInfo has the current service request numbers from all the flywheel projects
    # Do an inner join to grab all the charges that match the group/projects and format into 
    # ilab compatiable csv file.
    #
    # *** service id should come from a config file
    #
    SELECT 
        "472933" AS service_id,
        note,
        format("%8.2f",round(ProjectTotalCharges,2)) AS service_quantity,
        "" AS price,
        format("%s01", InvoiceMonth) AS purchased_on,
        iLabServiceRequestNumber as service_request_id,
        "" AS owner_email,
        "" AS pi_email_or_group_id,
        "" AS payment_number
    FROM (
        SELECT 
	    *
	FROM (
	    SELECT
                 REPLACE(`Group`,"_","-") AS FwGroup
	        , Project AS FwProject
	        , iLabServiceRequestNumber
	    FROM
	     `'"${Project}.${Dataset}.TempProjectInfo"'` 
        ) ProjectInfo
        INNER JOIN (
    
            SELECT 
                InvoiceMonth,
                FwGroup,
                FwProject,
                format("%s/%s Analysis Gears %.2f Storage Charge %.2f Storage Usage(Gb) %.2f Bsc Storage %.2f Bsc Initial Analysis %.2f Bsc Project %.2f",
                        FwGroup,
                        if (FwProject is NULL, "Deleted", FwProject),
                        GcpAllocatedComputeDynamicCosts,
                        GcpAllocatedStorageCosts,
                        GcpAllocatedStorageStandardGb,
                        BscStorageCharge,
                        BscInitialAnalysisCharge,
                        BscProjectCharges
                    ) AS `note`
                , FwInitialAnalysisCount
                , GcpAllocatedComputeDynamicCosts
                , GcpAllocatedStorageCosts
                , GcpAllocatedStorageStandardGb
                , BscStorageCharge
                , BscProjectCharges
                , ProjectTotalCharges
    
             FROM (
	     SELECT
		  InvoiceMonth
		, FwGroup
		, FwProject
                , SUM(FwInitialAnalysisCount) AS FwInitialAnalysisCount
                , SUM(IF (GcpAllocatedComputeDynamicCosts IS NULL, 0.0, GcpAllocatedComputeDynamicCosts)) AS GcpAllocatedComputeDynamicCosts
                , SUM(GcpAllocatedStorageCosts) AS GcpAllocatedStorageCosts
                , SUM(GcpAllocatedStorageStandardGb) AS GcpAllocatedStorageStandardGb
		, SUM(BscInitialAnalysisCharge) AS BscInitialAnalysisCharge
                , SUM(BscStorageCharge) AS BscStorageCharge
                , SUM(BscProjectCharges) AS BscProjectCharges
                , SUM(ProjectTotalCharges) AS ProjectTotalCharges
              FROM `'"${Project}.${Dataset}."'FwProjectAllocatedChargesV4` 
              WHERE InvoiceMonth = "'"${Year}${Month}"'" 
	      GROUP BY
	          InvoiceMonth
		, FwGroup
		, FwProject
	      ORDER BY
	          InvoiceMonth
		, FwGroup
		, FwProject

	   )
        ) ProjectCosts
        ON 
                ProjectInfo.FwGroup = ProjectCosts.FwGroup
            AND
                ProjectInfo.FwProject = ProjectCosts.FwProject 
        WHERE 
                REGEXP_CONTAINS(iLabServiceRequestNumber,"^([0-9]+)$")
                AND round(ProjectTotalCharges,2) >= 0.01
    )
    ORDER BY service_quantity desc
    '
}

function calculateNonFwGcpChargesPre20240701 {
    bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '
    # ServiceId
    # BscGcpSurchargePercent
    # PurchaseDate
    # Year
    # Month
    # Project
    # Dateset
    
    SELECT 
        "'"$ServiceId"'" AS service_id,
        format("%s (%8.2f + (%8.2f * %0.2f = %8.2f)) * %0.2f = %8.2f",
             GcpProjectName,
             TotalDiscountedCosts,
    	     TotalDiscountedStorageCosts,
    	     '"$BscGcpSurchargePercent"',
    	     BscGcpStorageFee,
    	     AllocationPercent,
    	     TotalAllocatedCharges
          )
          AS note,
        format("%8.2f", ROUND(TotalAllocatedCharges,2)) AS service_quantity,
        "" AS price,
        "'"$PurchaseDate"'" AS purchased_on,
        iLabServiceRequestNumber AS service_request_id,
        "" AS owner_email,
        "" AS pi_email_or_group_id,
        "" AS payment_number
    FROM (
         SELECT
    	*
         FROM (
    	SELECT
    	        AllocationPercent,
    	        GcpProjectName,
    	        TotalDiscountedCosts,
    	        TotalDiscountedStorageCosts,
    	        ROUND((TotalDiscountedStorageCosts * '"$BscGcpSurchargePercent"'),2) AS BscGcpStorageFee,	     # How much we charge them for storage
    	        ROUND(TotalDiscountedStorageCosts + (TotalDiscountedStorageCosts * 0.25),2) AS TotalCharges,	     # Total storage costs with bsc surcharge

		# *** this sure looks like StorageCosts are being charged for twice - once in TotalDiscountedStorageCosts and again in TotalDicountedCosts
    	        ROUND((TotalDiscountedCosts + (TotalDiscountedStorageCosts * 0.25)) * AllocationPercent,2) AS TotalAllocatedCharges,

    		IlabServiceRequestNumber,
    		FundNumber,
    	FROM (
    	    SELECT 
    	        BscGcpProjectCosts.InvoiceMonth AS InvoiceMonth,
    	        BscGcpProjectCosts.GcpProjectName AS GcpProjectName,
    	        ROUND(SUM(DiscountedCosts),2) AS TotalDiscountedCosts,
    	        ROUND(SUM(DiscountedStorageCosts),2) AS TotalDiscountedStorageCosts,
    	        BscGcpProjectCostAllocations.AllocationPercent AS AllocationPercent,
    	        BscGcpProjectCostAllocations.iLabServiceRequestNumber AS IlabServiceRequestNumber,
    	        BscGcpProjectCostAllocations.FundNumber AS FundNumber
    	    FROM (
    	        SELECT 
    	            InvoiceMonth,
    	            GcpProjectName,
    	            ServiceDescription,
    	            Costs + Discounts AS DiscountedCosts,
    	            IF ((ServiceDescription = "Cloud Storage"), (Costs + Discounts), 0.0) AS DiscountedStorageCosts,
    	        FROM `'"${Project}.${Dataset}."'GcpNonFlywheelCosts` 
    	        WHERE 
    	            InvoiceMonth = @InvoiceMonth
    	    ) BscGcpProjectCosts
    	    FULL OUTER JOIN 
    	    	`'"${Project}.${Dataset}."'BscGcpProjectCostAllocations` BscGcpProjectCostAllocations
    	    ON
    		BscGcpProjectCosts.GcpProjectName = BscGcpProjectCostAllocations.GcpProjectName
    	    GROUP BY 
    	        BscGcpProjectCosts.InvoiceMonth,
    	        BscGcpProjectCosts.GcpProjectName,
    	    	BscGcpProjectCostAllocations.AllocationPercent,
    		BscGcpProjectCostAllocations.FundNumber,
    		IlabServiceRequestNumber
    	    ORDER BY 
    	        BscGcpProjectCosts.GcpProjectName ASC
    	)
         )
         WHERE
    	  ROUND(TotalAllocatedCharges,2) >= 0.01
    	AND
    	  FundNumber != "InternalBenNumber"
    )	
    '
}

function calculateNonFwGcpChargesPost20240701 {
    Database=v5BscGcpNonFwCharges

    bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '

CREATE TABLE IF NOT EXISTS
         `'"${Project}.${Dataset}.${Database}"'`
     (
	  InvoiceMonth				STRING
	, GcpProjectName			STRING
	, TotalDicountedCosts			FLOAT64
	, BscGcpFee				FLOAT64
	, AllocationPercent			FLOAT64
	, TotalAllocatedCharges			FLOAT64
	, IlabServiceRequestNumber		INT64
	, FundNumber				STRING
     );

DELETE FROM
         `'"${Project}.${Dataset}.${Database}"'`
    WHERE
        InvoiceMonth = @InvoiceMonth
;

INSERT 
       `'"${Project}.${Dataset}.${Database}"'`

    SELECT
    	*
    FROM (
    	SELECT
		InvoiceMonth
	      , GcpProjectName
    	      , TotalDiscountedCosts
    	      , ROUND((TotalDiscountedCosts * '"$BscGcpSurchargePercent"'),2) AS BscGcpFee	    # How much we charge them for GCP usage

    	       , ROUND((TotalDiscountedCosts + (TotalDiscountedCosts * '"$BscGcpSurchargePercent"')) * AllocationPercent,2) AS TotalAllocatedCharges
    	       , AllocationPercent

    	       , IlabServiceRequestNumber
    	       , FundNumber
	       , GcpProjectId
    	FROM (
    	    SELECT 
    	        BscGcpProjectCosts.InvoiceMonth AS InvoiceMonth,
    	        BscGcpProjectCosts.GcpProjectName AS GcpProjectName,
    	        ROUND(SUM(DiscountedCosts),2) AS TotalDiscountedCosts,
    	        ROUND(SUM(DiscountedStorageCosts),2) AS TotalDiscountedStorageCosts,
    	        BscGcpProjectCostAllocations.AllocationPercent AS AllocationPercent,
    	        BscGcpProjectCostAllocations.iLabServiceRequestNumber AS IlabServiceRequestNumber,
    	        BscGcpProjectCostAllocations.FundNumber AS FundNumber
		, GcpProjectId
		, BscGcpProjectCosts.GcpProjectId

    	    FROM (
    	        SELECT 
    	            InvoiceMonth,
    	            GcpProjectName,
    	            ServiceDescription,
    	            Costs + Discounts AS DiscountedCosts,
    	            IF ((ServiceDescription = "Cloud Storage"), (Costs + Discounts), 0.0) AS DiscountedStorageCosts,
    	        FROM
		     `'"${Project}.${Dataset}."'GcpNonFlywheelCosts` 
    	        WHERE 
    	            InvoiceMonth = @InvoiceMonth
    	    ) BscGcpProjectCosts
    	    FULL OUTER JOIN 
    	    	`'"${Project}.${Dataset}."'BscGcpProjectCostAllocations` BscGcpProjectCostAllocations
    	    ON
    		BscGcpProjectCosts.GcpProjectName = BscGcpProjectCostAllocations.GcpProjectName
    	    GROUP BY 
    	        BscGcpProjectCosts.InvoiceMonth,
    	        BscGcpProjectCosts.GcpProjectName,
    	    	BscGcpProjectCostAllocations.AllocationPercent,
    		BscGcpProjectCostAllocations.FundNumber,
    		IlabServiceRequestNumber
    	    ORDER BY 
    	        BscGcpProjectCosts.GcpProjectName ASC
    	)
       )
         WHERE
    	  ROUND(TotalAllocatedCharges,2) >= 0.01
    	AND
    	  FundNumber != "InternalBenNumber"
    ;


    # ServiceId
    # BscGcpSurchargePercent
    # PurchaseDate
    # Year
    # Month
    # Project
    # Dateset
    
    SELECT 
        "'"$ServiceId"'" AS service_id,
        format("%s (%8.2f + (%8.2f * %0.2f = %8.2f)) * %0.2f = %8.2f",
             GcpProjectName,
             TotalDiscountedCosts,
    	     TotalDiscountedCosts,
    	     '"$BscGcpSurchargePercent"',
    	     BscGcpFee,
    	     AllocationPercent,
    	     TotalAllocatedCharges
          )
          AS note,
        format("%8.2f", ROUND(TotalAllocatedCharges,2)) AS service_quantity,
        "" AS price,
        "'"$PurchaseDate"'" AS purchased_on,
        IlabServiceRequestNumber AS service_request_id,
        "" AS owner_email,
        "" AS pi_email_or_group_id,
        "" AS payment_number
    FROM (
         SELECT
    	*
         FROM (
    	SELECT
    	        AllocationPercent,
    	        GcpProjectName,
    	        TotalDiscountedCosts,
    	        ROUND((TotalDiscountedCosts * '"$BscGcpSurchargePercent"'),2) AS BscGcpFee,		    # How much we charge them for GCP usage

    	        ROUND((TotalDiscountedCosts + (TotalDiscountedCosts * '"$BscGcpSurchargePercent"')) * AllocationPercent,2) AS TotalAllocatedCharges,

    		IlabServiceRequestNumber,
    		FundNumber,
    	FROM (
    	    SELECT 
    	        BscGcpProjectCosts.InvoiceMonth AS InvoiceMonth,
    	        BscGcpProjectCosts.GcpProjectName AS GcpProjectName,
    	        ROUND(SUM(DiscountedCosts),2) AS TotalDiscountedCosts,
    	        ROUND(SUM(DiscountedStorageCosts),2) AS TotalDiscountedStorageCosts,
    	        BscGcpProjectCostAllocations.AllocationPercent AS AllocationPercent,
    	        BscGcpProjectCostAllocations.iLabServiceRequestNumber AS IlabServiceRequestNumber,
    	        BscGcpProjectCostAllocations.FundNumber AS FundNumber
    	    FROM (
    	        SELECT 
    	            InvoiceMonth,
    	            GcpProjectName,
    	            ServiceDescription,
    	            Costs + Discounts AS DiscountedCosts,
    	            IF ((ServiceDescription = "Cloud Storage"), (Costs + Discounts), 0.0) AS DiscountedStorageCosts,
    	        FROM `'"${Project}.${Dataset}."'GcpNonFlywheelCosts` 
    	        WHERE 
    	            InvoiceMonth = @InvoiceMonth
    	    ) BscGcpProjectCosts
    	    FULL OUTER JOIN 
    	    	`'"${Project}.${Dataset}."'BscGcpProjectCostAllocations` BscGcpProjectCostAllocations
    	    ON
    		BscGcpProjectCosts.GcpProjectName = BscGcpProjectCostAllocations.GcpProjectName
    	    GROUP BY 
    	        BscGcpProjectCosts.InvoiceMonth,
    	        BscGcpProjectCosts.GcpProjectName,
    	    	BscGcpProjectCostAllocations.AllocationPercent,
    		BscGcpProjectCostAllocations.FundNumber,
    		IlabServiceRequestNumber
    	    ORDER BY 
    	        BscGcpProjectCosts.GcpProjectName ASC
    	)
         )
         WHERE
    	  ROUND(TotalAllocatedCharges,2) >= 0.01
    	AND
    	  FundNumber != "InternalBenNumber"
    )	
    '
}

function downloadNonFwGcpIlabCharges {
    #
    # Edit link: https://docs.google.com/spreadsheets/d/1aNXqOV7WYSzVKrm-4Vhz54USyi0Ns9Prd4QsCVSf92A/edit?pli=1&gid=0#gid=0
    #		 Owned by holder@pennbrain.upenn.edu
    #
    BscGcpProjectCostAllocations=https://docs.google.com/spreadsheets/d/e/2PACX-1vQo4_xTQmetGhNCH_sEo_B1KI7glRgRqizq1LthUo36g3tIZ9iO5-Ll07qk6-NFw1FjLQQ5yDkmtp1S/pub?output=csv
    BscGcpProjectCostAllocations='https://docs.google.com/spreadsheets/d/1aNXqOV7WYSzVKrm-4Vhz54USyi0Ns9Prd4QsCVSf92A/pub?output=csv'

    BscGcpProjectCostAllocationsFile=$(mktemp /tmp/BscGcpProjectCostAllocations-XXXXXX)
    #
    # UPHS firewall blocks chead from accessing google sheets where the gcp cost allocation is maintained,
    # so we go to bscsub to get the data.
    #
    [ "$(hostname -s)" == "chead" ] && CmdPrefix="ssh holder@bscsub.pmacs.upenn.edu"

    ($CmdPrefix wget -q -O - "$BscGcpProjectCostAllocations" ; echo "") > "$BscGcpProjectCostAllocationsFile"

    DB="${Dataset}.BscGcpProjectCostAllocations"

    ServiceId=455000

    BscGcpSurchargePercent=0.50
    [ "${Year}${Month}" -lt "202407" ] && BscGcpSurchargePercent=0.25

    PurchaseDate="${opt_y}${opt_m}01"

    ($CmdPrefix wget -q -O - "$BscGcpProjectCostAllocations" ; echo "") > "$BscGcpProjectCostAllocationsFile"

    if [ ! -s "$BscGcpProjectCostAllocationsFile" ]
    then
	echo "$CmdName : Zero size Bsc GCP Project Allocation file '$BscGcpProjectCostAllocationsFile'" 1>&2
	exit 1
    fi
    
    bq load --autodetect --project_id="${Project}" --skip_leading_rows 1 --replace --source_format=CSV "$DB" "$BscGcpProjectCostAllocationsFile" 2> /dev/null

    ProblemProjects="$(bq query --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '
    
    SELECT 
    	     GcpProjectName
	   , TotalProjectAllocationPercent
    FROM (
    	 SELECT
    	       GcpProjectName
	     , SUM(AllocationPercent) AS TotalProjectAllocationPercent
         FROM
	     `'"${Project}.${Dataset}."'BscGcpProjectCostAllocations`
         GROUP BY
    	    GcpProjectName

    )
    WHERE
        TotalProjectAllocationPercent != 1.0
    ORDER BY
    	GcpProjectName
	
    '  2> /dev/null)"
    if [ -n "$ProblemProjects" ]
    then
	echo "${CmdName} : GcpProject allocations" 1>&2
        echo "$ProblemProjects" | column -t -s, 1>&2
	exit 2
    fi

    if [ "${Year}${Month}" -lt "202407" ]
    then
	sys calculateNonFwGcpChargesPre20240701
    else
	sys calculateNonFwGcpChargesPost20240701
    fi

}


function downloadFwMriIlabCharges {
    bq query --batch=true --use_legacy_sql=false --format=csv --allow_large_results --max_rows=1000000 --parameter="InvoiceMonth:STRING:${opt_y}${opt_m}" '
    
	# *** Should pull scanners out of flywheel
	# *** Changes here also have to be made in the opt_M if statement at the bottom
	#
        CREATE TEMP TABLE Scanners 
        AS ( 
            SELECT 
                "HUP6" AS Scanner, "455017" AS ServiceId
        
            UNION ALL SELECT
                "SC3T" AS Scanner, "454998" AS ServiceId
        
            UNION ALL SELECT
                "SC7T" AS Scanner, "455018" AS ServiceId

	    UNION ALL SELECT
	    	"FWDicomReceiver", "509764" AS ServiceId
        );
        
        SELECT 
            ServiceId AS service_id,
            format("%s %s %s %s %s",
                SessionID,
                Ilab.Scanner,
                CAST(Date AS STRING),
                REGEXP_REPLACE(Path,"/[^/]+/[^/]+$",""),
                StudyComments
            ) AS note,
            1 AS service_quantity,
            "" AS price,
            FORMAT_DATE("%Y-%m-%d",DATE) AS purchased_on,
        	"3050653" AS service_request_id,
        	"" AS owner_email,
        	"" AS pi_email_or_group_id,
        	"" AS payment_number

        FROM `'"${Project}.${Dataset}."'FwSessionReport` Ilab
        INNER JOIN 
            Scanners
        ON 
           Ilab.Scanner = Scanners.Scanner 
        WHERE 
                FORMAT_DATE("%Y%m",Date) = "'"${Year}${Month}"'" 
            AND Scanners.Scanner IN ( SELECT Scanner FROM Scanners)
            AND StudyComments NOT LIKE "not-flywheel"
            AND StudyDescription NOT LIKE "not-flywheel"
            AND Path NOT LIKE "%techdev%"
	    AND StudyComments NOT LIKE "%techdev%"
	    AND StudyDescription NOT LIKE "%techdev%"
            AND Path NOT LIKE "%phantom%"
            AND StudyComments NOT LIKE "%phantom%"
            AND StudyDescription NOT LIKE "%phantom"
            AND Path NOT LIKE "%unknown%"
        ORDER BY 
	   service_quantity desc
	;

    ' | sed '1,/^[	 ]*service_quantity/d'
}

syntax="${CmdName} [-4|-5][-d Dataset][-p Project][-f][-g][-M][-n][-v] {-m Month} {-y Year}"

#
# -f flywheel
# -g GCPNonFlywheel
# -M MRI imports
# -P PMACS
#
while getopts 45d:fgMm:p:vy: arg
do
	case "$arg" in 
		4|5|d|f|g|M|m|n|p|v|y)
			eval "opt_${arg}=${OPTARG:=1}"
			;;
	esac
done

shift $(($OPTIND - 1))

if echo "$0" | grep -q /
then
	FlywheelUtilsDir=$(dirname $(dirname $(realpath "$0")))
else
	FlywheelUtilsDir=$(dirname $(dirname $(which "$0")))
fi

if [ -z "$opt_y" ] || [ -z "$opt_m" ]
then
	echo "$syntax" 1>&2
	exit 1
fi

nowmonth=$(date +%Y-%m-15)
Year=$(date --date="$nowmonth -1 month" +'%Y')
[ -n "$opt_y" ] && Year="$opt_y"

Month=$(date --date="$nowmonth -1 month" +'%m')
	     [ -n "$opt_m" ] && Month="$opt_m"

Dataset=BillingAllocation
[ -n "$opt_d" ] && Dataset="$opt_d"

Project=pennbrain-center
[ -n "$opt_p" ] && Project="$opt_p"

if [ -n "$opt_f" ]
then
	TableName=FwProjectBilling

	ProjectInfoFile=$(mktemp /tmp/ProjectInfo-XXXXX.csv)
	fwProjectInfoCrud -p '.ProjectFunding' | jq -r -f "${FlywheelUtilsDir}/lib/ProjectInfo2CSV.jq" | sed 's/\.name/Name/; s/\.email/Email/' > "$ProjectInfoFile"

	# *** TempProjectInfo should probably be moved to a v5 database
	Schema=$(head -n 1 "$ProjectInfoFile" | sed 's/"//g; s/,/:string,/g; s/$/:string/')
	bq load --project_id pennbrain-center  --autodetect --replace --source_format=CSV "${Dataset}.TempProjectInfo" "$ProjectInfoFile" "$Schema"

	if [ -n "$opt_5" ]
	then
	    v5DownloadFwIlabCharges
	elif [ -n "$opt_4" ]
	then
	    downloadFwIlabChargesV4
	else
	    downloadFwIlabCharges
	fi
fi

if [ -n "$opt_g" ]
then
	downloadNonFwGcpIlabCharges NonFwGcpServiceId BscGcpSurchargePercent Year MonthProject Dataset
fi

if [ -n "$opt_M" ]
then
	#
	# *** Should read from iLab
	#
	ServiceRequestId=3050653

	#
	# *** Should read from flywheel
	#
	declare -A ServiceIDs=( [HUP6]=455017 [SC3T]=454998 [SC7T]=455018 [FWDicomReceiver]=509764 )
	Scanners=$(echo "${!ServiceIDs[@]}" | sed 's/ /|/g')

	downloadFwMriIlabCharges
fi



